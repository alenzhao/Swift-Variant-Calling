
# Generated by stc version 0.6.0
# date                    : 2016/08/03 15:00:37
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/align.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-align.Jq6.tic
# STC home                : /usr/local/src/swift-t-0.9.0/stc
# Turbine home            : /usr/local/src/swift-t-0.9.0/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : align.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-align.Jq6.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.0/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.0/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY align.swift:44:33
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:configFile align.swift:39:0
    # Var: file u:sampleInfoFile align.swift:44:0
    # Var: string[string] u:vars align.swift:42:0
    # Var: string t:18 EXPR_TEMPORARY align.swift:__entry():55:25
    # Var: string t:23 EXPR_TEMPORARY align.swift:__entry():57:7
    # Var: string t:26 EXPR_TEMPORARY align.swift:__entry():59:35
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: int t:25 EXPR_TEMPORARY align.swift:__entry():59:24
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list container string string 5 1 4 ] [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 1 1 7 ] [ list integer 1 1 8 ] ] t:7 u:vars t:18 t:23 t:26 t:25
    turbine::c::log "allocated t:7=<${t:7}> u:vars=<${u:vars}> t:18=<${t:18}> t:23=<${t:23}> t:26=<${t:26}>"
    turbine::c::log "allocated t:25=<${t:25}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 2 ] [ list file 1 1 3 ] ] [ list 0 0 ] ] u:configFile u:sampleInfoFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:18} string
    turbine::container_reference ${u:vars} "BWAINDEX" ${t:23} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:26} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] align.swift:getConfigVariables():26:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 9 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:18} ${t:23} ${t:25} ${t:7} {${u:sampleInfoFile}} ${u:vars}"
    turbine::rule [ list ${t:26} ] "__entry-async_op-parse_int ${t:25} ${t:26}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:18 t:23 t:25 t:7 u:sampleInfoFile u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:18} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:25} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:23} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo align.swift:__entry():48:1
        # Var: string t:17 EXPR_TEMPORARY align.swift:__entry():55:18
        # Var: file u:alignedsam align.swift:__entry():55:66
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        lassign [ adlb::multicreate [ list container integer string 1 2 10 ] [ list string 1 1 11 ] ] u:sampleInfo t:17
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> t:17=<${t:17}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 12 ] ] [ list 1 ] ] u:alignedsam
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} CACHED 1 ]
        turbine::rule [ list ${t:18} ] [ list __entry-async_op-strcat ${t:17} ${t:18} ${t:25} ${v:alias:sampleName} ${u:alignedsam} ${u:vars} ]
        turbine::rule [ list ${t:23} ] "__entry-call_foreign-trace ${t:23}"
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::decr_local_file_refcount v:sampleInfoFile
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:25} 1
    turbine::read_refcount_decr ${t:23} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-async_op-strcat { t:17 t:18 t:25 v:alias:sampleName u:alignedsam u:vars } {
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 "${v:t:18}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:17} ${v:t:17}
    turbine::set_filename_val ${u:alignedsam} ${v:t:17}
    turbine::rule [ list ${t:17} ${t:25} ${u:vars} ] "bwa-app-leaf1 ${t:17} ${t:25} {${u:alignedsam}} ${u:vars}"
}


proc bwa-app-leaf1 { t:17 t:25 u:alignedsam u:vars } {
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] align.swift:bwa():9:233
    # Var: $file v:output RENAMED [$file:__v:output] align.swift:bwa():9:233
    set v:__filename:output [ turbine::retrieve_string ${t:17} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: "/usr/bin/bwa" "mem" "/home/azza/swift-project/genome/human" "/home/azza/swift-project/Dataset/HG00108.lowcoverage.chr20.smallregion_1.fastq" "/home/azza/swift-project/Dataset/HG00108.lowcoverage.chr20.smallregion_2.fastq" [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "/usr/bin/bwa" [ dict create "stdout" ${v:__filename:output} ] "mem" "/home/azza/swift-project/genome/human" "/home/azza/swift-project/Dataset/HG00108.lowcoverage.chr20.smallregion_1.fastq" "/home/azza/swift-project/Dataset/HG00108.lowcoverage.chr20.smallregion_2.fastq"
    turbine::store_file ${u:alignedsam} v:output 0
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${t:25} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-trace { t:23 } {
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $void v:t:22 VALUE_OF [void:__t:22]
    set v:t:23 [ turbine::retrieve_string ${t:23} CACHED 1 ]
    turbine::trace_impl ${v:t:23}
}


proc __entry-async_op-parse_int { t:25 t:26 } {
    # Var: $string v:t:26 VALUE_OF [string:__t:26]
    # Var: $int v:t:25 VALUE_OF [int:__t:25]
    set v:t:26 [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:t:25 [ turbine::parse_int_impl ${v:t:26} 10 ]
    turbine::store_integer ${t:25} ${v:t:25}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:7" "align:44:33"
adlb::add_debug_symbol 2 "configFile" "align:39:0"
adlb::add_debug_symbol 3 "sampleInfoFile" "align:44:0"
adlb::add_debug_symbol 4 "vars" "align:42:0"
adlb::add_debug_symbol 5 "__t:18" "align:__entry():55:25"
adlb::add_debug_symbol 6 "__t:23" "align:__entry():57:7"
adlb::add_debug_symbol 7 "__t:26" "align:__entry():59:35"
adlb::add_debug_symbol 8 "__t:25" "align:__entry():59:24"
adlb::add_debug_symbol 9 "keyValuePair" "align:getConfigVariables():26:2"
adlb::add_debug_symbol 10 "sampleInfo" "align:__entry():48:1"
adlb::add_debug_symbol 11 "__t:17" "align:__entry():55:18"
adlb::add_debug_symbol 12 "alignedsam" "align:__entry():55:66"
turbine::start swift:main swift:constants
turbine::finalize
