
# Generated by stc version 0.6.0
# date                    : 2016/09/30 09:14:35
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-VCcallingPipeline.I4p.tic
# STC home                : /usr/local/src/swift-t-0.9.1/stc
# Turbine home            : /usr/local/src/swift-t-0.9.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-VCcallingPipeline.I4p.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.1/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.1/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-4
    turbine::allocate_custom c:s_-4 string 1 1 1 1
    turbine::store_string ${c:s_-4} "\"\""
    global c:s__GATKCombi-1
    turbine::allocate_custom c:s__GATKCombi-1 string 1 1 2 1
    turbine::store_string ${c:s__GATKCombi-1} "*.GATKCombineGVCF.raw.vcf"
    global c:s_compressio
    turbine::allocate_custom c:s_compressio string 1 1 3 1
    turbine::store_string ${c:s_compressio} "--compression 1"
    global c:s_markDuplic
    turbine::allocate_custom c:s_markDuplic string 1 1 4 1
    turbine::store_string ${c:s_markDuplic} "--markDuplicates"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 5 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 6 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 7 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
    global c:s_u
    turbine::allocate_custom c:s_u string 1 1 8 1
    turbine::store_string ${c:s_u} "-u"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY VCcallingPipeline.swift:27:33
    # Var: string t:619 EXPR_TEMPORARY VCcallingPipeline.swift:223:16
    # Var: string t:620 EXPR_TEMPORARY VCcallingPipeline.swift:223:40
    # Var: string t:621 EXPR_TEMPORARY VCcallingPipeline.swift:223:23
    # Var: string t:623 EXPR_TEMPORARY VCcallingPipeline.swift:223:41
    # Var: string t:628 EXPR_TEMPORARY VCcallingPipeline.swift:224:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $void v:t:617 VALUE_OF [void:__t:617]
    # Var: int u:samples_processing_done VCcallingPipeline.swift:29:0
    # Var: file u:jointVCF VCcallingPipeline.swift:223:80
    # Var: file u:configFile VCcallingPipeline.swift:22:0
    # Var: file u:sampleInfoFile VCcallingPipeline.swift:27:0
    # Var: string[string] u:vars VCcallingPipeline.swift:25:0
    # Var: file u:variantFiles VCcallingPipeline.swift:224:42
    # Var: string t:11 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:88
    # Var: string t:13 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:106
    # Var: string t:15 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():39:148
    # Var: string t:17 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():45:14
    # Var: string t:79 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():61:5
    # Var: string t:233 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():105:54
    # Var: string t:238 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():106:55
    # Var: string t:241 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():108:31
    # Var: string t:368 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():144:17
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:78 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():61:32
    # Var: float t:261 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():118:17
    # Var: string[int] u:indices VCcallingPipeline.swift:__entry():144:9
    lassign [ adlb::multicreate [ list string 1 1 9 ] [ list string 1 1 10 ] [ list string 1 1 11 ] [ list string 3 1 12 ] [ list string 1 1 13 ] [ list string 2 1 14 ] [ list integer 1 1 15 ] [ list container string string 17 1 19 ] [ list string 1 1 21 ] [ list string 1 1 22 ] [ list string 1 1 23 ] [ list string 1 1 24 ] [ list string 2 1 25 ] [ list string 2 1 26 ] [ list string 1 1 27 ] [ list string 1 1 28 ] [ list string 1 1 29 ] [ list integer 1 1 30 ] [ list float 1 1 31 ] [ list container integer string 1 1 32 ] ] t:7 t:619 t:620 t:621 t:623 t:628 u:samples_processing_done u:vars t:11 t:13 t:15 t:17 t:79 t:233 t:238 t:241 t:368 t:78 t:261 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:619=<${t:619}> t:620=<${t:620}> t:621=<${t:621}> t:623=<${t:623}>"
    turbine::c::log "allocated t:628=<${t:628}> u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}>"
    turbine::c::log "allocated t:15=<${t:15}> t:17=<${t:17}> t:79=<${t:79}> t:233=<${t:233}> t:238=<${t:238}>"
    turbine::c::log "allocated t:241=<${t:241}> t:368=<${t:368}> t:78=<${t:78}> t:261=<${t:261}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 16 ] [ list file 1 1 17 ] [ list file 1 1 18 ] [ list file 1 1 20 ] ] [ list 1 0 0 1 ] ] u:jointVCF u:configFile u:sampleInfoFile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::trace_impl "####    Now launching joint_genotyping script for all SAMPLEs: each 200 together        ##########"
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:621} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:623} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:628} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:79} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:233} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:238} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:241} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:368} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 33 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:619} ${t:621} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:17} ${t:233} ${t:238} ${t:241} ${t:261} ${t:620} ${t:621} ${t:628} ${t:7} ${t:78} ${t:79} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::rule [ list ${t:628} ] "__entry-async_op-strcat-10 ${t:628} {${u:variantFiles}}"
    turbine::rule [ list ${t:79} ] "__entry-async_op-eq_string-2 ${t:78} ${t:79}"
    turbine::rule [ list ${t:233} ] "__entry-async_op-parse_float-4 ${t:233} ${t:261}"
    turbine::rule [ list ${t:368} ] "__entry-call_foreign-split-3 ${t:368} ${u:indices}"
    turbine::rule [ list ${t:621} ${t:623} ] "__entry-optmerged-8 ${t:17} ${t:619} ${t:620} ${t:621} ${t:623} {${u:jointVCF}}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:619 t:621 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-1 OPT_TEMPORARY
    global c:s__GATKCombi-1
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: string[int] u:varlist VCcallingPipeline.swift:__entry():228:1
    # Var: file t:645 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():228:43
    # Var: string t:651 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:27
    # Var: string t:653 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:44
    # Var: string t:655 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:51
    # Var: string t:658 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:112
    # Var: string t:659 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:92
    # Var: string t:661 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():229:113
    lassign [ adlb::multicreate [ list container integer string 1 1 34 ] [ list string 1 1 36 ] [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 1 1 41 ] ] u:varlist t:651 t:653 t:655 t:658 t:659 t:661
    turbine::c::log "allocated u:varlist=<${u:varlist}> t:651=<${t:651}> t:653=<${t:653}> t:655=<${t:655}> t:658=<${t:658}>"
    turbine::c::log "allocated t:659=<${t:659}> t:661=<${t:661}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 35 ] ] [ list 0 ] ] t:645
    f:find_files ${u:variantFiles} ${t:621} ${c:s__GATKCombi-1} -100 "HARD" "RANK"
    f:sed ${t:645} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:651} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:655} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:659} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:661} string
    turbine::rule [ list [ turbine::get_file_td ${t:645} ] ] "__entry-call_foreign-read ${t:619} {${t:645}} ${t:651} ${t:653} ${t:658} {${u:jointVCF}} ${u:varlist}"
    turbine::rule [ list ${t:655} ] "__entry-async_op-dircat ${t:653} ${t:655}"
    turbine::rule [ list ${t:659} ${t:661} ] "__entry-async_op-dircat-1 ${t:658} ${t:659} ${t:661}"
    turbine::read_refcount_decr ${t:621} 1
    turbine::read_refcount_decr ${u:samples_processing_done} 1
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:619 t:645 t:651 t:653 t:658 u:jointVCF u:varlist } {
    # Var: $file v:t:645 VALUE_OF [file:__t:645]
    # Var: $string v:t:644 VALUE_OF [string:__t:644]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:643 VALUE_OF [string:__t:643]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:645 [ turbine::retrieve_file ${t:645} CACHED 1 ]
    set v:t:644 [ turbine::file_read_local ${v:t:645} ]
    set v:n:4 [ string length ${v:t:644} ]
    set v:t:643 [ turbine::replace_all_impl ${v:t:644} "\n" "" 0 ${v:n:4} ]
    set v:varlist [ turbine::split_impl ${v:t:643} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:619} ${t:651} ${t:653} ${t:658} ] "GenotypeGVCFs-app-leaf1 ${t:619} ${t:651} ${t:653} ${t:658} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc GenotypeGVCFs-app-leaf1 { t:619 t:651 t:653 t:658 v:variants:1 u:jointVCF } {
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:gatkdir:6 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:reference:6 RENAMED [$string:__v:reference] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:javadir:7 [ turbine::retrieve_string ${t:651} CACHED 1 ]
    set v:gatkdir:6 [ turbine::retrieve_string ${t:653} CACHED 1 ]
    set v:reference:6 [ turbine::retrieve_string ${t:658} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:619} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:reference:6} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:reference:6} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-async_op-dircat { t:653 t:655 } {
    # Var: $string v:t:655 VALUE_OF [string:__t:655]
    # Var: $string v:t:654 VALUE_OF [string:__t:654]
    # Var: $string v:t:653 VALUE_OF [string:__t:653]
    set v:t:655 [ turbine::retrieve_string ${t:655} CACHED 1 ]
    set v:t:654 "${v:t:655}/GenomeAnalysisTK.jar"
    set v:t:653 "${v:t:654}"
    turbine::store_string ${t:653} ${v:t:653}
}


proc __entry-async_op-dircat-1 { t:658 t:659 t:661 } {
    # Var: $string v:t:659 VALUE_OF [string:__t:659]
    # Var: $string v:t:661 VALUE_OF [string:__t:661]
    # Var: $string v:t:658 VALUE_OF [string:__t:658]
    set v:t:659 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:t:661 [ turbine::retrieve_string ${t:661} CACHED 1 ]
    set v:t:658 "${v:t:659}/${v:t:661}"
    turbine::store_string ${t:658} ${v:t:658}
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:17 t:233 t:238 t:241 t:261 t:620 t:621 t:628 t:7 t:78 t:79 u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:17} ${t:233} ${t:238} ${t:241} ${t:261} ${t:620} ${t:621} ${t:628} ${t:78} ${t:79} {${v:sampleLines}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:17 t:233 t:238 t:241 t:261 t:620 t:621 t:628 t:78 t:79 v:sampleLines u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:17} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:241} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:79} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:620} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:621} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:233} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:78} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:261} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 21 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:238} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:628} [ expr { 6 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo VCcallingPipeline.swift:__entry():34:1
        # Var: string u:read1 VCcallingPipeline.swift:__entry():36:1
        # Var: string u:read2 VCcallingPipeline.swift:__entry():37:1
        # Var: string u:rgheader VCcallingPipeline.swift:__entry():39:1
        # Var: file u:qcfile VCcallingPipeline.swift:__entry():45:69
        # Var: string t:24 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():47:18
        # Var: file u:alignedsam VCcallingPipeline.swift:__entry():47:63
        # Var: string t:29 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():49:22
        # Var: file u:dedupsortedbam VCcallingPipeline.swift:__entry():49:71
        # Var: string t:34 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():50:15
        # Var: file u:outbam VCcallingPipeline.swift:__entry():50:77
        # Var: string t:40 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():51:19
        # Var: file u:rawvariant VCcallingPipeline.swift:__entry():51:81
        # Var: file u:mergedbam VCcallingPipeline.swift:__entry():52:78
        # Var: file u:mergedvariant VCcallingPipeline.swift:__entry():53:82
        # Var: file u:flagstats VCcallingPipeline.swift:__entry():56:87
        # Var: file u:chr_bamListfile VCcallingPipeline.swift:__entry():58:57
        # Var: file u:chr_vcfListfile VCcallingPipeline.swift:__entry():59:57
        # Var: string[int] u:stat VCcallingPipeline.swift:__entry():110:1
        # Var: string[int] t:243 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():111:14
        # Var: string[int] t:246 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():112:13
        # Var: string[int] t:249 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():113:12
        # Var: float u:perc_mapped VCcallingPipeline.swift:__entry():116:12
        # Var: float t:256 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():116:38
        # Var: string u:VarcallDir VCcallingPipeline.swift:__entry():140:1
        # Var: string u:RealignDir VCcallingPipeline.swift:__entry():141:1
        # Var: int u:chromosomes_processing_done VCcallingPipeline.swift:__entry():143:1
        # Var: string[int] u:chr_bamList VCcallingPipeline.swift:__entry():198:1
        # Var: string[int] u:chr_vcfList VCcallingPipeline.swift:__entry():204:1
        # Var: file t:592 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():204:47
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:226 VALUE_OF [void:__t:226]
        # Var: $void v:t:228 VALUE_OF [void:__t:228]
        # Var: $void v:t:360 VALUE_OF [void:__t:360]
        # Var: $string v:t:565 VALUE_OF [string:__t:565]
        # Var: $string v:t:564 VALUE_OF [string:__t:564]
        # Var: $void v:t:563 VALUE_OF [void:__t:563]
        # Var: $string v:t:587 VALUE_OF [string:__t:587]
        # Var: $string v:t:586 VALUE_OF [string:__t:586]
        # Var: $void v:t:585 VALUE_OF [void:__t:585]
        # Var: $void v:t:615 VALUE_OF [void:__t:615]
        lassign [ adlb::multicreate [ list container integer string 1 2 42 ] [ list string 1 1 43 ] [ list string 1 1 44 ] [ list string 1 1 45 ] [ list string 2 1 47 ] [ list string 1 1 49 ] [ list string 1 1 51 ] [ list string 1 1 53 ] [ list container integer string 3 1 60 ] [ list container integer string 1 1 61 ] [ list container integer string 1 1 62 ] [ list container integer string 1 1 63 ] [ list float 2 1 64 ] [ list float 1 1 65 ] [ list string 1 1 66 ] [ list string 1 1 67 ] [ list integer 1 1 68 ] [ list container integer string 1 1 69 ] [ list container integer string 1 1 70 ] ] u:sampleInfo u:read1 u:read2 u:rgheader t:24 t:29 t:34 t:40 u:stat t:243 t:246 t:249 u:perc_mapped t:256 u:VarcallDir u:RealignDir u:chromosomes_processing_done u:chr_bamList u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> t:24=<${t:24}>"
        turbine::c::log "allocated t:29=<${t:29}> t:34=<${t:34}> t:40=<${t:40}> u:stat=<${u:stat}> t:243=<${t:243}>"
        turbine::c::log "allocated t:246=<${t:246}> t:249=<${t:249}> u:perc_mapped=<${u:perc_mapped}> t:256=<${t:256}> u:VarcallDir=<${u:VarcallDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 46 ] [ list file 2 1 48 ] [ list file 4 1 50 ] [ list file 1 1 52 ] [ list file 1 1 54 ] [ list file 1 1 55 ] [ list file 1 1 56 ] [ list file 1 1 57 ] [ list file 1 1 58 ] [ list file 1 1 59 ] [ list file 1 1 71 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:qcfile u:alignedsam u:dedupsortedbam u:outbam u:rawvariant u:mergedbam u:mergedvariant u:flagstats u:chr_bamListfile u:chr_vcfListfile t:592
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        turbine::trace_impl "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
        turbine::trace_impl "########   ALIGNMENT QC TEST   FOR SAMPLE" ${v:alias:sampleName} "             ###############"
        set a:t:244 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:243} 0 ]
        set a:t:247 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:246} 0 ]
        set a:t:250 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:249} 0 ]
        turbine::trace_impl "#############   WRAP UP the align_dedup stage   ############"
        set v:t:565 "#######   MERGE BAMS BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:564 "${v:t:565}      ######"
        turbine::trace_impl ${v:t:564}
        set v:t:587 "#######   MERGE VCFs BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:586 "${v:t:587}       ######"
        turbine::trace_impl ${v:t:586}
        f:sed ${t:592} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::trace_impl "#############   COPY RESULTS TO DELIVERY                               ############"
        f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
        f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
        turbine::store_integer ${u:samples_processing_done} 1
        turbine::rule [ list ${t:78} ] [ list __entry-if1 ${t:24} ${t:241} ${t:29} ${t:621} ${t:628} ${t:78} ${t:79} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:34} ${t:628} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:outbam} ${u:vars} ]
        turbine::rule [ list ${t:11} ${t:13} ${t:15} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:17} ] "__entry-copy_in_filename ${t:17} {${u:qcfile}}"
        turbine::rule [ list ${t:620} ] [ list __entry-async_op-dircat-2 ${t:620} ${v:alias:sampleName} ${u:mergedbam} ${u:mergedvariant} ]
        turbine::rule [ list ${t:233} ] "__entry-call_foreign-trace ${t:233}"
        turbine::rule [ list ${t:238} ] "__entry-call_foreign-trace-1 ${t:238}"
        turbine::rule [ list ${a:t:244} ] "__entry-call_foreign-split {${a:t:244}} ${t:243}"
        turbine::rule [ list ${a:t:247} ] "__entry-call_foreign-split-1 {${a:t:247}} ${t:246}"
        turbine::rule [ list ${a:t:250} ] "__entry-call_foreign-split-2 {${a:t:250}} ${t:249}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:233} ${t:238} ${t:256} ${t:261} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-3 {${a:tot_mapped}} ${t:256}"
        turbine::rule [ list [ turbine::get_file_td ${t:592} ] ] "__entry-call_foreign-read-2 ${t:40} {${t:592}} ${u:chr_vcfList} {${u:rawvariant}} ${u:vars}"
        turbine::rule [ list ${t:621} ] [ list __entry-optmerged-3 ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:29} ${t:34} ${t:40} ${t:621} ${t:628} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:outbam} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:628} ] [ list __entry-optmerged-7 ${t:24} ${t:628} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        turbine::file_read_refcount_decr ${u:mergedbam} 1
        turbine::file_read_refcount_decr ${u:outbam} 1
        turbine::file_read_refcount_decr ${u:rawvariant} 1
        turbine::file_read_refcount_decr ${u:mergedvariant} 1
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:233} 1
    turbine::read_refcount_decr ${t:241} 1
    turbine::read_refcount_decr ${t:621} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:17} 1
    turbine::read_refcount_decr ${t:620} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:78} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${t:261} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:238} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:628} 1
}


proc __entry-if1 { t:24 t:241 t:29 t:621 t:628 t:78 t:79 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:78 VALUE_OF [boolean:__t:78] VCcallingPipeline.swift:__entry():61:35
    set v:__t:78 [ turbine::retrieve_integer ${t:78} CACHED 1 ]
    if { ${v:__t:78} } {
        # Var: string t:84 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():63:17
        # Var: file u:dedupsam VCcallingPipeline.swift:__entry():63:63
        # Var: file u:dedupbam VCcallingPipeline.swift:__entry():64:66
        # Var: string t:94 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:23
        # Var: string t:96 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:53
        # Var: string t:98 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:71
        # Var: int t:100 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:93
        # Var: string t:101 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:104
        # Var: $void v:t:82 VALUE_OF [void:__t:82]
        lassign [ adlb::multicreate [ list string 1 1 72 ] [ list string 1 1 75 ] [ list string 1 1 76 ] [ list string 1 1 77 ] [ list integer 1 1 78 ] [ list string 1 1 79 ] ] t:84 t:94 t:96 t:98 t:100 t:101
        turbine::c::log "allocated t:84=<${t:84}> t:94=<${t:94}> t:96=<${t:96}> t:98=<${t:98}> t:100=<${t:100}>"
        turbine::c::log "allocated t:101=<${t:101}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 73 ] [ list file 1 1 74 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:94} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:96} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:98} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:101} string
        f:bwa_mem ${u:alignedsam} ${t:94} ${u:read1} ${u:read2} ${t:96} ${t:98} ${t:100} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain1 ${t:100} ${t:24} ${t:241} ${t:628} ${t:84} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:628} ] [ list __entry-async_op-strcat-1 ${t:628} ${t:84} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${t:621} ] [ list __entry-async_op-strcat-2 ${t:621} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:101} ] "__entry-async_op-parse_int ${t:100} ${t:101}"
        turbine::read_refcount_decr ${t:98} 1
        turbine::read_refcount_decr ${t:94} 1
        turbine::read_refcount_decr ${t:96} 1
    } else {
        # Var: file u:alignedbam VCcallingPipeline.swift:__entry():74:67
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 83 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:79} 1
        turbine::read_refcount_incr ${t:621} 1
        turbine::read_refcount_incr ${t:241} 1
        turbine::read_refcount_incr ${t:29} 1
        turbine::rule [ list ${t:621} ] [ list __entry-async_op-strcat-3 ${t:621} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:79} ] [ list __entry-async_op-eq_string ${t:24} ${t:241} ${t:29} ${t:621} ${t:628} ${t:79} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:29} 1
    turbine::read_refcount_decr ${t:241} 1
    turbine::read_refcount_decr ${t:621} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${t:628} 1
}


proc __entry-chain1 { t:100 t:24 t:241 t:628 t:84 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string t:103 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():67:24
    lassign [ adlb::multicreate [ list string 1 1 80 ] ] t:103
    turbine::c::log "allocated t:103=<${t:103}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:103} string
    turbine::rule [ list ${t:103} ${t:24} ${t:84} ] "samblaster-app-leaf1 ${t:100} ${t:103} ${t:24} ${t:241} ${t:628} ${t:84} {${u:alignedsam}} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
}


proc samblaster-app-leaf1 { t:100 t:103 t:24 t:241 t:628 t:84 u:alignedsam u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    set v:samblasterdir [ turbine::retrieve_string ${t:103} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:84} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] "__entry-chain2 ${t:100} ${t:241} ${t:628} {${u:dedupbam}} {${u:dedupsam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:100 t:241 t:628 u:dedupbam u:dedupsam u:dedupsortedbam u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:dedupbam} ${t:241} ${u:dedupsam} ${t:100} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:dedupbam} ] ] "__entry-chain3 ${t:100} ${t:628} {${u:dedupbam}} {${u:dedupsortedbam}} ${u:vars}"
    turbine::read_refcount_decr ${t:241} 1
    turbine::file_read_refcount_decr ${u:dedupsam} 1
}


proc __entry-chain3 { t:100 t:628 u:dedupbam u:dedupsortedbam u:vars } {
    # Var: string c:s_compressio OPT_TEMPORARY
    global c:s_compressio
    # Var: string t:111 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():70:28
    # Var: string t:112 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():70:35
    lassign [ adlb::multicreate [ list string 1 1 81 ] [ list string 1 1 82 ] ] t:111 t:112
    turbine::c::log "allocated t:111=<${t:111}> t:112=<${t:112}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:112} string
    f:novosort ${u:dedupsortedbam} ${t:111} ${u:dedupbam} ${t:628} ${t:100} ${c:s_compressio} -100 "HARD" "RANK"
    turbine::rule [ list ${t:112} ] "__entry-async_op-strcat ${t:111} ${t:112}"
    turbine::read_refcount_decr ${t:100} 1
    turbine::read_refcount_decr ${t:111} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:dedupbam} 1
    turbine::read_refcount_decr ${t:628} 1
}


proc __entry-async_op-strcat { t:111 t:112 } {
    # Var: $string v:t:112 VALUE_OF [string:__t:112]
    # Var: $string v:t:111 VALUE_OF [string:__t:111]
    set v:t:112 [ turbine::retrieve_string ${t:112} CACHED 1 ]
    set v:t:111 "${v:t:112}/novosort"
    turbine::store_string ${t:111} ${v:t:111}
}


proc __entry-async_op-strcat-1 { t:628 t:84 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:628:3 VALUE_OF [string:__t:628]
    # Var: $string v:t:84 VALUE_OF [string:__t:84]
    set v:t:628:3 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:t:84 "${v:t:628:3}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:84} ${v:t:84}
    turbine::set_filename_val ${u:dedupsam} ${v:t:84}
}


proc __entry-async_op-strcat-2 { t:621 v:alias:sampleName u:dedupbam } {
    # Var: $string v:t:621:5 VALUE_OF [string:__t:621]
    # Var: $string v:t:89 VALUE_OF [string:__t:89]
    set v:t:621:5 [ turbine::retrieve_string ${t:621} CACHED 1 ]
    set v:t:89 "${v:t:621:5}/align/${v:alias:sampleName}.wdups.bam"
    turbine::set_filename_val ${u:dedupbam} ${v:t:89}
}


proc __entry-async_op-parse_int { t:100 t:101 } {
    # Var: $string v:t:101 VALUE_OF [string:__t:101]
    # Var: $int v:t:100 VALUE_OF [int:__t:100]
    set v:t:101 [ turbine::retrieve_string ${t:101} CACHED 1 ]
    set v:t:100 [ turbine::parse_int_impl ${v:t:101} 10 ]
    turbine::store_integer ${t:100} ${v:t:100}
}


proc __entry-async_op-strcat-3 { t:621 v:alias:sampleName u:alignedbam } {
    # Var: $string v:t:621:6 VALUE_OF [string:__t:621]
    # Var: $string v:t:122 VALUE_OF [string:__t:122]
    set v:t:621:6 [ turbine::retrieve_string ${t:621} CACHED 1 ]
    set v:t:122 "${v:t:621:6}/align/${v:alias:sampleName}.nodups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:122}
}


proc __entry-async_op-eq_string { t:24 t:241 t:29 t:621 t:628 t:79 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:79:1 VALUE_OF [string:__t:79]
    # Var: $boolean v:t:127 VALUE_OF [boolean:__t:127]
    set v:t:79:1 [ turbine::retrieve_string ${t:79} CACHED 1 ]
    set v:t:127 [ string equal ${v:t:79:1} "PICARD" ]
    if { ${v:t:127} } {
        # Var: string t:133 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():77:26
        # Var: file u:alignedsortedbam VCcallingPipeline.swift:__entry():77:75
        # Var: string t:138 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():78:21
        # Var: file u:metricsfile VCcallingPipeline.swift:__entry():78:70
        # Var: string t:143 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:24
        # Var: string t:145 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:54
        # Var: string t:147 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:72
        # Var: int t:149 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:94
        # Var: string t:150 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():79:105
        # Var: $void v:t:131 VALUE_OF [void:__t:131]
        lassign [ adlb::multicreate [ list string 1 1 84 ] [ list string 1 1 86 ] [ list string 1 1 88 ] [ list string 1 1 89 ] [ list string 1 1 90 ] [ list integer 1 1 91 ] [ list string 1 1 92 ] ] t:133 t:138 t:143 t:145 t:147 t:149 t:150
        turbine::c::log "allocated t:133=<${t:133}> t:138=<${t:138}> t:143=<${t:143}> t:145=<${t:145}> t:147=<${t:147}>"
        turbine::c::log "allocated t:149=<${t:149}> t:150=<${t:150}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 85 ] [ list file 0 1 87 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${t:621} 1
        turbine::read_refcount_incr ${t:29} 1
        turbine::trace_impl "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:143} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:145} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:147} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:150} string
        f:bwa_mem ${u:alignedsam} ${t:143} ${u:read1} ${u:read2} ${t:145} ${t:147} ${t:149} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain4 ${t:133} ${t:138} ${t:149} ${t:241} ${t:29} ${t:628} {${u:alignedbam}} {${u:alignedsam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
        turbine::rule [ list ${t:150} ] "__entry-async_op-parse_int-1 ${t:149} ${t:150}"
        turbine::rule [ list ${t:621} ] [ list __entry-optmerged ${t:133} ${t:138} ${t:621} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:metricsfile} ]
        turbine::read_refcount_decr ${t:145} 1
        turbine::read_refcount_decr ${t:143} 1
        turbine::read_refcount_decr ${t:147} 1
    } else {
        # Var: string t:178 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():88:7
        # Var: $void v:t:175 VALUE_OF [void:__t:175]
        lassign [ adlb::multicreate [ list string 1 1 97 ] ] t:178
        turbine::c::log "allocated t:178=<${t:178}>"
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 1
        turbine::read_refcount_incr ${t:24} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:241} 1
        turbine::trace_impl "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:178} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-explicit-wait1 ${t:628} {${u:alignedbam}} {${u:dedupsortedbam}} ${u:vars}"
        turbine::rule [ list ${t:178} ] [ list __entry-async_op-eq_string-1 ${t:178} ${t:24} ${t:241} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:29} 1
    turbine::read_refcount_decr ${t:241} 1
    turbine::read_refcount_decr ${t:621} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${t:628} 1
}


proc __entry-chain4 { t:133 t:138 t:149 t:241 t:29 t:628 u:alignedbam u:alignedsam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:241} ${u:alignedsam} ${t:149} ${c:s_u} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "__entry-chain5 ${t:133} ${t:138} ${t:149} ${t:29} ${t:628} {${u:alignedbam}} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::read_refcount_decr ${t:241} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
}


proc __entry-chain5 { t:133 t:138 t:149 t:29 t:628 u:alignedbam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string c:s_-4 OPT_TEMPORARY
    global c:s_-4
    # Var: string t:158 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():82:31
    # Var: string t:159 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():82:38
    lassign [ adlb::multicreate [ list string 1 1 93 ] [ list string 1 1 94 ] ] t:158 t:159
    turbine::c::log "allocated t:158=<${t:158}> t:159=<${t:159}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:159} string
    f:novosort ${u:alignedsortedbam} ${t:158} ${u:alignedbam} ${t:628} ${t:149} ${c:s_-4} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] "__entry-chain6 ${t:133} ${t:138} ${t:29} ${t:628} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}} ${u:vars}"
    turbine::rule [ list ${t:159} ] "__entry-async_op-strcat-4 ${t:158} ${t:159}"
    turbine::read_refcount_decr ${t:149} 1
    turbine::read_refcount_decr ${t:158} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-chain6 { t:133 t:138 t:29 t:628 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:vars } {
    # Var: string t:169 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():83:39
    # Var: string t:171 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():83:56
    lassign [ adlb::multicreate [ list string 1 1 95 ] [ list string 1 1 96 ] ] t:169 t:171
    turbine::c::log "allocated t:169=<${t:169}> t:171=<${t:171}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:169} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:171} string
    turbine::rule [ list ${t:133} ${t:138} ${t:169} ${t:171} ${t:29} ${t:628} ] "picard-app-leaf1 ${t:133} ${t:138} ${t:169} ${t:171} ${t:29} ${t:628} {${u:alignedsortedbam}} {${u:dedupsortedbam}} {${u:metricsfile}}"
}


proc picard-app-leaf1 { t:133 t:138 t:169 t:171 t:29 t:628 u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:__filename:metricsfile RENAMED [$string:__v:__filename:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    set v:javadir [ turbine::retrieve_string ${t:169} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:171} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${t:133} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:__filename:metricsfile [ turbine::retrieve_string ${t:138} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:__filename:metricsfile} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:__filename:inputFile:1} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:__filename:metricsfile} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-async_op-strcat-4 { t:158 t:159 } {
    # Var: $string v:t:159 VALUE_OF [string:__t:159]
    # Var: $string v:t:158 VALUE_OF [string:__t:158]
    set v:t:159 [ turbine::retrieve_string ${t:159} CACHED 1 ]
    set v:t:158 "${v:t:159}/novosort"
    turbine::store_string ${t:158} ${v:t:158}
}


proc __entry-async_op-parse_int-1 { t:149 t:150 } {
    # Var: $string v:t:150 VALUE_OF [string:__t:150]
    # Var: $int v:t:149 VALUE_OF [int:__t:149]
    set v:t:150 [ turbine::retrieve_string ${t:150} CACHED 1 ]
    set v:t:149 [ turbine::parse_int_impl ${v:t:150} 10 ]
    turbine::store_integer ${t:149} ${v:t:149}
}


proc __entry-optmerged { t:133 t:138 t:621 v:alias:sampleName u:alignedsortedbam u:metricsfile } {
    # Var: $string v:t:621:7 VALUE_OF [string:__t:621]
    # Var: $string v:t:133 VALUE_OF [string:__t:133]
    # Var: $string v:t:138 VALUE_OF [string:__t:138]
    set v:t:621:7 [ turbine::retrieve_string ${t:621} CACHED 1 ]
    set v:t:133 "${v:t:621:7}/align/${v:alias:sampleName}.nodups.sorted.bam"
    turbine::store_string ${t:133} ${v:t:133}
    set v:t:138 "${v:t:621:7}/align/${v:alias:sampleName}.picard.metrics"
    turbine::store_string ${t:138} ${v:t:138}
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:133}
    turbine::set_filename_val ${u:metricsfile} ${v:t:138}
}


proc __entry-explicit-wait1 { t:628 u:alignedbam u:dedupsortedbam u:vars } {
    # Var: string c:s_markDuplic OPT_TEMPORARY
    global c:s_markDuplic
    # Var: string t:214 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():97:30
    # Var: string t:215 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():97:37
    # Var: int t:221 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():97:102
    # Var: string t:222 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():97:113
    lassign [ adlb::multicreate [ list string 1 1 98 ] [ list string 1 1 99 ] [ list integer 1 1 100 ] [ list string 1 1 101 ] ] t:214 t:215 t:221 t:222
    turbine::c::log "allocated t:214=<${t:214}> t:215=<${t:215}> t:221=<${t:221}> t:222=<${t:222}>"
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:215} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:222} string
    f:novosort ${u:dedupsortedbam} ${t:214} ${u:alignedbam} ${t:628} ${t:221} ${c:s_markDuplic} -100 "HARD" "RANK"
    turbine::rule [ list ${t:215} ] "__entry-async_op-strcat-5 ${t:214} ${t:215}"
    turbine::rule [ list ${t:222} ] "__entry-async_op-parse_int-2 ${t:221} ${t:222}"
    turbine::read_refcount_decr ${t:221} 1
    turbine::read_refcount_decr ${t:214} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:628} 1
}


proc __entry-async_op-strcat-5 { t:214 t:215 } {
    # Var: $string v:t:215 VALUE_OF [string:__t:215]
    # Var: $string v:t:214 VALUE_OF [string:__t:214]
    set v:t:215 [ turbine::retrieve_string ${t:215} CACHED 1 ]
    set v:t:214 "${v:t:215}/novosort"
    turbine::store_string ${t:214} ${v:t:214}
}


proc __entry-async_op-parse_int-2 { t:221 t:222 } {
    # Var: $string v:t:222 VALUE_OF [string:__t:222]
    # Var: $int v:t:221 VALUE_OF [int:__t:221]
    set v:t:222 [ turbine::retrieve_string ${t:222} CACHED 1 ]
    set v:t:221 [ turbine::parse_int_impl ${v:t:222} 10 ]
    turbine::store_integer ${t:221} ${v:t:221}
}


proc __entry-async_op-eq_string-1 { t:178 t:24 t:241 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:178 VALUE_OF [string:__t:178]
    # Var: $boolean v:t:177 VALUE_OF [boolean:__t:177]
    set v:t:178 [ turbine::retrieve_string ${t:178} CACHED 1 ]
    set v:t:177 [ string equal ${v:t:178} "BWAMEM" ]
    if { ${v:t:177} } {
        # Var: string t:181 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:25
        # Var: string t:183 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:55
        # Var: string t:185 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:73
        # Var: int t:187 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:95
        # Var: string t:188 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():89:106
        lassign [ adlb::multicreate [ list string 1 1 102 ] [ list string 1 1 103 ] [ list string 1 1 104 ] [ list integer 1 1 105 ] [ list string 1 1 106 ] ] t:181 t:183 t:185 t:187 t:188
        turbine::c::log "allocated t:181=<${t:181}> t:183=<${t:183}> t:185=<${t:185}> t:187=<${t:187}> t:188=<${t:188}>"
        turbine::container_reference ${u:vars} "BWADIR" ${t:181} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:183} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:185} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:188} string
        f:bwa_mem ${u:alignedsam} ${t:181} ${u:read1} ${u:read2} ${t:183} ${t:185} ${t:187} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain7 ${t:187} ${t:241} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:188} ] "__entry-async_op-parse_int-3 ${t:187} ${t:188}"
        turbine::read_refcount_decr ${t:181} 1
        turbine::read_refcount_decr ${t:185} 1
        turbine::read_refcount_decr ${t:183} 1
    } else {
        # Var: string t:197 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:34
        # Var: string t:201 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:87
        # Var: string t:203 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:111
        # Var: int t:205 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:136
        # Var: string t:206 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():92:147
        lassign [ adlb::multicreate [ list string 1 1 107 ] [ list string 1 1 108 ] [ list string 1 1 109 ] [ list integer 1 1 110 ] [ list string 1 1 111 ] ] t:197 t:201 t:203 t:205 t:206
        turbine::c::log "allocated t:197=<${t:197}> t:201=<${t:201}> t:203=<${t:203}> t:205=<${t:205}> t:206=<${t:206}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:24} 1
        turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:197} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:201} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:203} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:206} string
        turbine::rule [ list ${t:206} ] [ list __entry-async_op-parse_int-4 ${t:197} ${t:201} ${t:203} ${t:205} ${t:206} ${t:24} ${t:241} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:241} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain7 { t:187 t:241 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:241} ${u:alignedsam} ${t:187} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:241} 1
    turbine::read_refcount_decr ${t:187} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-async_op-parse_int-3 { t:187 t:188 } {
    # Var: $string v:t:188 VALUE_OF [string:__t:188]
    # Var: $int v:t:187 VALUE_OF [int:__t:187]
    set v:t:188 [ turbine::retrieve_string ${t:188} CACHED 1 ]
    set v:t:187 [ turbine::parse_int_impl ${v:t:188} 10 ]
    turbine::store_integer ${t:187} ${v:t:187}
}


proc __entry-async_op-parse_int-4 { t:197 t:201 t:203 t:205 t:206 t:24 t:241 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:206 VALUE_OF [string:__t:206]
    # Var: $int v:t:205 VALUE_OF [int:__t:205]
    set v:t:206 [ turbine::retrieve_string ${t:206} CACHED 1 ]
    set v:t:205 [ turbine::parse_int_impl ${v:t:206} 10 ]
    turbine::store_integer ${t:205} ${v:t:205}
    turbine::rule [ list ${t:197} ${t:201} ${t:203} ${t:24} ${u:rgheader} ] [ list __entry-async_op-strcat-6 ${t:197} ${t:201} ${t:203} ${t:205} ${t:24} ${t:241} ${v:alias:read1} ${v:alias:read2} ${v:t:205} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc __entry-async_op-strcat-6 { t:197 t:201 t:203 t:205 t:24 t:241 v:alias:read1 v:alias:read2 v:t:205 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:197 VALUE_OF [string:__t:197]
    # Var: $string v:t:196 VALUE_OF [string:__t:196]
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:t:197 [ turbine::retrieve_string ${t:197} CACHED 1 ]
    set v:t:196 "${v:t:197}/novoalign"
    set v:INDEX [ turbine::retrieve_string ${t:201} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:196 "-c" ${v:t:205} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:t:196} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:t:205} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain8 ${t:205} ${t:241} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
    turbine::read_refcount_decr ${t:203} 1
}


proc __entry-chain8 { t:205 t:241 u:alignedbam u:alignedsam } {
    # Var: string c:s_u OPT_TEMPORARY
    global c:s_u
    f:samtools_view ${u:alignedbam} ${t:241} ${u:alignedsam} ${t:205} ${c:s_u} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:241} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:205} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:34 t:628 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:outbam u:vars } {
    # Var: string t:559 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():192:44
    # Var: string t:561 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():193:44
    # Var: $string v:t:559 VALUE_OF [string:__t:559]
    # Var: $string v:t:561 VALUE_OF [string:__t:561]
    lassign [ adlb::multicreate [ list string 1 1 112 ] [ list string 1 1 113 ] ] t:559 t:561
    turbine::c::log "allocated t:559=<${t:559}> t:561=<${t:561}>"
    set v:t:559 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:559} ${v:t:559}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:559} -100 "HARD" "RANK"
    set v:t:561 "${v:alias:sampleName}.*.vcf"
    turbine::store_string ${t:561} ${v:t:561}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:561} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] "__entry-call_foreign-read-1 ${t:34} ${t:628} ${u:chr_bamList} {${u:chr_bamListfile}} {${u:outbam}} ${u:vars}"
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:561} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${t:559} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:34 t:628 u:chr_bamList u:chr_bamListfile u:outbam u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:569 VALUE_OF [string:__t:569]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:568 VALUE_OF [string:__t:568]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:575 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():199:27
    # Var: string t:582 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():199:105
    lassign [ adlb::multicreate [ list string 1 1 114 ] [ list string 1 1 115 ] ] t:575 t:582
    turbine::c::log "allocated t:575=<${t:575}> t:582=<${t:582}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:569 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:569} ]
    set v:t:568 [ turbine::replace_all_impl ${v:t:569} "\n" "" 0 ${v:n:2} ]
    set v:chr_bamList [ turbine::split_impl ${v:t:568} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:575} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:582} string
    turbine::rule [ list ${t:34} ${t:575} ${t:582} ${t:628} ] "__entry-async_op-parse_int-5 ${t:34} ${t:575} ${t:582} ${t:628} ${u:chr_bamList} {${u:outbam}}"
}


proc __entry-async_op-parse_int-5 { t:34 t:575 t:582 t:628 u:chr_bamList u:outbam } {
    # Var: $string v:t:582 VALUE_OF [string:__t:582]
    # Var: $int v:t:581 VALUE_OF [int:__t:581]
    # Var: $string v:t:575 VALUE_OF [string:__t:575]
    # Var: $string v:t:574 VALUE_OF [string:__t:574]
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $string$[int] v:inputFilename:1 RENAMED [$string$[int]:__v:inputFilename] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    set v:t:582 [ turbine::retrieve_string ${t:582} CACHED 1 ]
    set v:t:581 [ turbine::parse_int_impl ${v:t:582} 10 ]
    set v:t:575 [ turbine::retrieve_string ${t:575} CACHED 1 ]
    set v:t:574 "${v:t:575}/novosort"
    set v:tmpdir:1 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:inputFilename:1 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:574 "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:581} {*}${v:inputFilename:1} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:t:574} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:581} {*}${v:inputFilename:1} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:17 u:qcfile } {
    # Var: $string v:t:17:1 VALUE_OF [string:__t:17]
    set v:t:17:1 [ turbine::retrieve_string ${t:17} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:17:1}
}


proc __entry-async_op-dircat-2 { t:620 v:alias:sampleName u:mergedbam u:mergedvariant } {
    # Var: $string v:t:620:3 VALUE_OF [string:__t:620]
    # Var: $string v:t:47 VALUE_OF [string:__t:47]
    # Var: $string v:t:46 VALUE_OF [string:__t:46]
    # Var: $string v:t:54 VALUE_OF [string:__t:54]
    set v:t:620:3 [ turbine::retrieve_string ${t:620} CACHED 1 ]
    set v:t:47 "${v:t:620:3}/${v:alias:sampleName}"
    set v:t:46 "${v:t:47}.recalibrated.bam"
    turbine::set_filename_val ${u:mergedbam} ${v:t:46}
    set v:t:54 "${v:t:47}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedvariant} ${v:t:54}
}


proc __entry-call_foreign-trace { t:233 } {
    # Var: $string v:t:233:1 VALUE_OF [string:__t:233]
    # Var: $void v:t:231 VALUE_OF [void:__t:231]
    set v:t:233:1 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    turbine::trace_impl "########   QC rule1: duplication cutoff <= " ${v:t:233:1} "          ###############"
}


proc __entry-call_foreign-trace-1 { t:238 } {
    # Var: $string v:t:238 VALUE_OF [string:__t:238]
    # Var: $void v:t:236 VALUE_OF [void:__t:236]
    set v:t:238 [ turbine::retrieve_string ${t:238} CACHED 1 ]
    turbine::trace_impl "########   QC rule2: mapped_reads cutoff >= " ${v:t:238} "           ###############"
}


proc __entry-call_foreign-split { a:t:244 t:243 } {
    # Var: $string v:alias:t:244 VALUE_OF [string:__alias:t:244]
    # Var: $string$[int] v:t:243 VALUE_OF [string[int]:__t:243]
    set v:alias:t:244 [ turbine::retrieve_string ${a:t:244} CACHED 1 ]
    set v:t:243 [ turbine::split_impl ${v:alias:t:244} " " ]
    turbine::build_rec ${t:243} ${v:t:243} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:247 t:246 } {
    # Var: $string v:alias:t:247 VALUE_OF [string:__alias:t:247]
    # Var: $string$[int] v:t:246 VALUE_OF [string[int]:__t:246]
    set v:alias:t:247 [ turbine::retrieve_string ${a:t:247} CACHED 1 ]
    set v:t:246 [ turbine::split_impl ${v:alias:t:247} " " ]
    turbine::build_rec ${t:246} ${v:t:246} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:250 t:249 } {
    # Var: $string v:alias:t:250 VALUE_OF [string:__alias:t:250]
    # Var: $string$[int] v:t:249 VALUE_OF [string[int]:__t:249]
    set v:alias:t:250 [ turbine::retrieve_string ${a:t:250} CACHED 1 ]
    set v:t:249 [ turbine::split_impl ${v:alias:t:250} " " ]
    turbine::build_rec ${t:249} ${v:t:249} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:233 t:238 t:256 t:261 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:255 VALUE_OF [float:__t:255]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:255 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:256} ] "__entry-async_op-div_float ${t:256} ${v:t:255} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:261} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:233} ${t:238} ${t:261} ${v:alias:sampleName} ${v:t:255} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:256 v:t:255 u:perc_mapped } {
    # Var: $float v:t:256:1 VALUE_OF [float:__t:256]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:256:1 [ turbine::retrieve_float ${t:256} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:256:1} / ${v:t:255} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:233 t:238 t:261 v:alias:sampleName v:t:255 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:253 VALUE_OF [float:__t:253]
    # Var: $float v:t:252 VALUE_OF [float:__t:252]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:261:1 VALUE_OF [float:__t:261]
    # Var: $boolean v:t:260 VALUE_OF [boolean:__t:260]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:253 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:252 [ expr { ${v:t:253} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:252} / ${v:t:255} } ]
    set v:t:261:1 [ turbine::retrieve_float ${t:261} CACHED 1 ]
    set v:t:260 [ expr { ${v:perc_dup} < ${v:t:261:1} } ]
    if { ${v:t:260} } {
        # Var: $string v:t:269 VALUE_OF [string:__t:269]
        # Var: $string v:t:268 VALUE_OF [string:__t:268]
        # Var: $string v:t:267 VALUE_OF [string:__t:267]
        # Var: $string v:t:266 VALUE_OF [string:__t:266]
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:233} 2
        set v:t:269 "#####  ${v:alias:sampleName}"
        set v:t:268 "${v:t:269} passed first filter percent_duplicates with value"
        set v:t:267 "${v:t:268}${v:perc_dup}"
        set v:t:266 "${v:t:267}, maximum cutoff is "
        turbine::rule [ list ${t:238} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-2 ${t:233} ${t:238} ${v:alias:sampleName} ${v:perc_dup} ${v:t:269} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${t:233} ] [ list __entry-async_op-strcat-9 ${t:233} ${v:t:266} ]
    } else {
        # Var: string t:344 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():129:218
        # Var: $string v:t:338 VALUE_OF [string:__t:338]
        # Var: $string v:t:337 VALUE_OF [string:__t:337]
        # Var: $string v:t:351 VALUE_OF [string:__t:351]
        # Var: $string v:t:336 VALUE_OF [string:__t:336]
        # Var: $string v:t:335 VALUE_OF [string:__t:335]
        # Var: $string v:t:350 VALUE_OF [string:__t:350]
        # Var: $string v:t:349 VALUE_OF [string:__t:349]
        lassign [ adlb::multicreate [ list string 1 1 118 ] ] t:344
        turbine::c::log "allocated t:344=<${t:344}>"
        set v:t:338 "#####  ${v:alias:sampleName}"
        set v:t:337 "${v:t:338} DID NOT pass first filter percent_duplicates with value"
        set v:t:351 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 not ok: percent_duplication="
        f:echo ${u:qcfile} ${t:344} -100 "HARD" "RANK"
        set v:t:336 "${v:t:337}${v:perc_dup}"
        set v:t:335 "${v:t:336}, maximum cutoff is "
        set v:t:350 "${v:t:351}${v:perc_dup}"
        set v:t:349 "${v:t:350}<? duplication_cutoff="
        turbine::rule [ list ${t:233} ${t:238} ${u:perc_mapped} ] [ list __entry-optmerged-1 ${t:233} ${t:238} ${t:344} ${v:t:335} ${v:t:349} ${u:perc_mapped} ]
        turbine::read_refcount_decr ${t:344} 1
    }
    turbine::read_refcount_decr ${t:233} 1
    turbine::read_refcount_decr ${t:238} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-parse_float-2 { t:233 t:238 v:alias:sampleName v:perc_dup v:t:269 u:perc_mapped u:qcfile } {
    # Var: $string v:t:238:1 VALUE_OF [string:__t:238]
    # Var: $float v:t:276 VALUE_OF [float:__t:276]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:275 VALUE_OF [boolean:__t:275]
    set v:t:238:1 [ turbine::retrieve_string ${t:238} CACHED 1 ]
    set v:t:276 [ turbine::string2float_impl ${v:t:238:1} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:275 [ expr { ${v:perc_mapped:1} > ${v:t:276} } ]
    if { ${v:t:275} } {
        # Var: string t:290 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():122:205
        # Var: $string v:t:283 VALUE_OF [string:__t:283]
        # Var: $string v:t:297 VALUE_OF [string:__t:297]
        # Var: $string v:t:282 VALUE_OF [string:__t:282]
        # Var: $string v:t:281 VALUE_OF [string:__t:281]
        # Var: $string v:t:280 VALUE_OF [string:__t:280]
        # Var: $void v:t:279 VALUE_OF [void:__t:279]
        # Var: $string v:t:296 VALUE_OF [string:__t:296]
        # Var: $string v:t:295 VALUE_OF [string:__t:295]
        lassign [ adlb::multicreate [ list string 1 1 116 ] ] t:290
        turbine::c::log "allocated t:290=<${t:290}>"
        set v:t:283 "${v:t:269} passed second filter map_cutoff with value"
        set v:t:297 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:290} -100 "HARD" "RANK"
        set v:t:282 "${v:t:283}${v:perc_mapped:1}"
        set v:t:281 "${v:t:282}, minimum cutoff is "
        set v:t:280 "${v:t:281}${v:t:238:1}"
        turbine::trace_impl ${v:t:280}
        set v:t:296 "${v:t:297}${v:perc_dup}"
        set v:t:295 "${v:t:296}<? duplication_cutoff="
        turbine::rule [ list ${t:233} ] [ list __entry-async_op-strcat-7 ${t:233} ${t:290} ${v:perc_mapped:1} ${v:t:238:1} ${v:t:295} ]
        turbine::read_refcount_decr ${t:290} 1
    } else {
        # Var: string t:317 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():125:209
        # Var: $string v:t:310 VALUE_OF [string:__t:310]
        # Var: $string v:t:324 VALUE_OF [string:__t:324]
        # Var: $string v:t:309 VALUE_OF [string:__t:309]
        # Var: $string v:t:308 VALUE_OF [string:__t:308]
        # Var: $string v:t:307 VALUE_OF [string:__t:307]
        # Var: $void v:t:306 VALUE_OF [void:__t:306]
        # Var: $string v:t:323 VALUE_OF [string:__t:323]
        # Var: $string v:t:322 VALUE_OF [string:__t:322]
        lassign [ adlb::multicreate [ list string 1 1 117 ] ] t:317
        turbine::c::log "allocated t:317=<${t:317}>"
        set v:t:310 "${v:t:269} DID NOT pass second filter map_cutoff with value"
        set v:t:324 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:317} -100 "HARD" "RANK"
        set v:t:309 "${v:t:310}${v:perc_mapped:1}"
        set v:t:308 "${v:t:309}, minimum cutoff is "
        set v:t:307 "${v:t:308}${v:t:238:1}"
        turbine::trace_impl ${v:t:307}
        set v:t:323 "${v:t:324}${v:perc_dup}"
        set v:t:322 "${v:t:323}<? duplication_cutoff="
        turbine::rule [ list ${t:233} ] [ list __entry-async_op-strcat-8 ${t:233} ${t:317} ${v:perc_mapped:1} ${v:t:238:1} ${v:t:322} ]
        turbine::read_refcount_decr ${t:317} 1
    }
    turbine::read_refcount_decr ${t:233} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-7 { t:233 t:290 v:perc_mapped:1 v:t:238:1 v:t:295 } {
    # Var: $string v:t:233:3 VALUE_OF [string:__t:233]
    # Var: $string v:t:294 VALUE_OF [string:__t:294]
    # Var: $string v:t:293 VALUE_OF [string:__t:293]
    # Var: $string v:t:292 VALUE_OF [string:__t:292]
    # Var: $string v:t:291 VALUE_OF [string:__t:291]
    # Var: $string v:t:290 VALUE_OF [string:__t:290]
    set v:t:233:3 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    set v:t:294 "${v:t:295}${v:t:233:3}"
    set v:t:293 "${v:t:294}\n\trule2 ok: percent_mapped="
    set v:t:292 "${v:t:293}${v:perc_mapped:1}"
    set v:t:291 "${v:t:292}>? mapping_cutoff="
    set v:t:290 "${v:t:291}${v:t:238:1}"
    turbine::store_string ${t:290} ${v:t:290}
}


proc __entry-async_op-strcat-8 { t:233 t:317 v:perc_mapped:1 v:t:238:1 v:t:322 } {
    # Var: $string v:t:233:4 VALUE_OF [string:__t:233]
    # Var: $string v:t:321 VALUE_OF [string:__t:321]
    # Var: $string v:t:320 VALUE_OF [string:__t:320]
    # Var: $string v:t:319 VALUE_OF [string:__t:319]
    # Var: $string v:t:318 VALUE_OF [string:__t:318]
    # Var: $string v:t:317 VALUE_OF [string:__t:317]
    set v:t:233:4 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    set v:t:321 "${v:t:322}${v:t:233:4}"
    set v:t:320 "${v:t:321}\n\trule2 not ok: percent_mapped="
    set v:t:319 "${v:t:320}${v:perc_mapped:1}"
    set v:t:318 "${v:t:319}>? mapping_cutoff="
    set v:t:317 "${v:t:318}${v:t:238:1}"
    turbine::store_string ${t:317} ${v:t:317}
}


proc __entry-async_op-strcat-9 { t:233 v:t:266 } {
    # Var: $string v:t:233:2 VALUE_OF [string:__t:233]
    # Var: $string v:t:265 VALUE_OF [string:__t:265]
    # Var: $void v:t:264 VALUE_OF [void:__t:264]
    set v:t:233:2 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    set v:t:265 "${v:t:266}${v:t:233:2}"
    turbine::trace_impl ${v:t:265}
}


proc __entry-optmerged-1 { t:233 t:238 t:344 v:t:335 v:t:349 u:perc_mapped } {
    # Var: $string v:t:233:5 VALUE_OF [string:__t:233]
    # Var: $string v:t:334 VALUE_OF [string:__t:334]
    # Var: $void v:t:333 VALUE_OF [void:__t:333]
    # Var: $string v:t:348 VALUE_OF [string:__t:348]
    # Var: $string v:t:347 VALUE_OF [string:__t:347]
    # Var: $float v:perc_mapped:6 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:346 VALUE_OF [string:__t:346]
    # Var: $string v:t:345 VALUE_OF [string:__t:345]
    # Var: $string v:t:238:6 VALUE_OF [string:__t:238]
    # Var: $string v:t:344 VALUE_OF [string:__t:344]
    set v:t:233:5 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    set v:t:334 "${v:t:335}${v:t:233:5}"
    turbine::trace_impl ${v:t:334}
    set v:t:348 "${v:t:349}${v:t:233:5}"
    set v:t:347 "${v:t:348}\n\trule2 not evaluated: percent_mapped="
    set v:perc_mapped:6 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:346 "${v:t:347}${v:perc_mapped:6}"
    set v:t:345 "${v:t:346}>? mapping_cutoff="
    set v:t:238:6 [ turbine::retrieve_string ${t:238} CACHED 1 ]
    set v:t:344 "${v:t:345}${v:t:238:6}"
    turbine::store_string ${t:344} ${v:t:344}
}


proc __entry-async_op-parse_float-3 { a:tot_mapped t:256 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:257 VALUE_OF [float:__t:257]
    # Var: $float v:t:256 VALUE_OF [float:__t:256]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:257 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:256 [ expr { ${v:t:257} * 100.0 } ]
    turbine::store_float ${t:256} ${v:t:256}
}


proc __entry-call_foreign-read-2 { t:40 t:592 u:chr_vcfList u:rawvariant u:vars } {
    # Var: $file v:t:592 VALUE_OF [file:__t:592]
    # Var: $string v:t:591 VALUE_OF [string:__t:591]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:590 VALUE_OF [string:__t:590]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:598 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:28
    # Var: string t:602 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:52
    # Var: string t:606 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:93
    # Var: string t:608 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:114
    # Var: string t:610 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:153
    # Var: string t:613 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():205:154
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 119 ] [ list string 1 1 120 ] [ list string 1 1 121 ] [ list string 1 1 122 ] [ list string 1 1 123 ] [ list string 1 1 124 ] ] t:598 t:602 t:606 t:608 t:610 t:613
    turbine::c::log "allocated t:598=<${t:598}> t:602=<${t:602}> t:606=<${t:606}> t:608=<${t:608}> t:610=<${t:610}>"
    turbine::c::log "allocated t:613=<${t:613}>"
    set v:t:592 [ turbine::retrieve_file ${t:592} CACHED 1 ]
    set v:t:591 [ turbine::file_read_local ${v:t:592} ]
    set v:n:3 [ string length ${v:t:591} ]
    set v:t:590 [ turbine::replace_all_impl ${v:t:591} "\n" "" 0 ${v:n:3} ]
    set v:chr_vcfList [ turbine::split_impl ${v:t:590} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:598} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:602} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:606} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:608} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:613} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:606} ${t:613} ] "__entry-optmerged-2 ${t:40} ${t:598} ${t:602} ${t:606} ${t:608} ${t:610} ${t:613} {${v:variants}} {${u:rawvariant}}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-2 { t:40 t:598 t:602 t:606 t:608 t:610 t:613 v:variants u:rawvariant } {
    # Var: $string v:t:606 VALUE_OF [string:__t:606]
    # Var: $string v:t:613 VALUE_OF [string:__t:613]
    # Var: $string v:t:610 VALUE_OF [string:__t:610]
    set v:t:606 [ turbine::retrieve_string ${t:606} CACHED 1 ]
    set v:t:613 [ turbine::retrieve_string ${t:613} CACHED 1 ]
    set v:t:610 "${v:t:606}/${v:t:613}"
    turbine::store_string ${t:610} ${v:t:610}
    turbine::rule [ list ${t:40} ${t:598} ${t:602} ${t:608} ${t:610} ] [ list __entry-async_op-dircat-3 ${t:40} ${t:598} ${t:602} ${t:608} ${t:610} ${v:t:606} ${v:variants} ${u:rawvariant} ]
}


proc __entry-async_op-dircat-3 { t:40 t:598 t:602 t:608 t:610 v:t:606 v:variants u:rawvariant } {
    # Var: $string v:t:608 VALUE_OF [string:__t:608]
    # Var: $string v:t:605 VALUE_OF [string:__t:605]
    # Var: $string v:t:602 VALUE_OF [string:__t:602]
    # Var: $string v:t:601 VALUE_OF [string:__t:601]
    # Var: $string v:t:600 VALUE_OF [string:__t:600]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:608 [ turbine::retrieve_string ${t:608} CACHED 1 ]
    set v:t:605 "${v:t:606}/${v:t:608}"
    set v:t:602 [ turbine::retrieve_string ${t:602} CACHED 1 ]
    set v:t:601 "${v:t:602}/GenomeAnalysisTK.jar"
    set v:t:600 "${v:t:601}"
    set v:javadir:6 [ turbine::retrieve_string ${t:598} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:610} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:40} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:t:600} "-T" "CombineGVCFs" "-R" ${v:t:605} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:t:600} "-T" "CombineGVCFs" "-R" ${v:t:605} "--dbsnp" ${v:dbsnp:2} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-optmerged-3 { u:RealignDir u:VarcallDir t:241 t:29 t:34 t:40 t:621 t:628 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:outbam u:rawvariant u:stat u:vars } {
    # Var: $string v:t:621:2 VALUE_OF [string:__t:621]
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $string v:t:62 VALUE_OF [string:__t:62]
    # Var: $string v:t:40 VALUE_OF [string:__t:40]
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    # Var: $string v:t:363 VALUE_OF [string:__t:363]
    set v:t:621:2 [ turbine::retrieve_string ${t:621} CACHED 1 ]
    set v:t:29 "${v:t:621:2}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:29} ${v:t:29}
    set v:t:35 "${v:t:621:2}/${v:alias:sampleName}"
    set v:t:62 "${v:t:621:2}/align/${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:29}
    set v:t:40 "${v:t:35}/variant/${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:40} ${v:t:40}
    turbine::set_filename_val ${u:rawvariant} ${v:t:40}
    set v:t:34 "${v:t:35}/realign/${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:34} ${v:t:34}
    turbine::set_filename_val ${u:outbam} ${v:t:34}
    set v:t:363 "${v:t:35}/variant/"
    turbine::set_filename_val ${u:flagstats} ${v:t:62}
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-4 ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:628} ${v:alias:sampleName} ${v:t:29} ${v:t:35} ${v:t:363} ${v:t:62} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:stat} ${u:vars} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:t:363} ]
    turbine::reset_priority
}


proc __entry-optmerged-4 { u:RealignDir u:VarcallDir t:241 t:628 v:alias:sampleName v:t:29 v:t:35 v:t:363 v:t:62 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:stat u:vars } {
    # Var: $string v:t:383 VALUE_OF [string:__t:383]
    # Var: $string v:t:420 VALUE_OF [string:__t:420]
    # Var: string t:428 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():165:85
    # Var: string t:435 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():169:35
    # Var: string t:437 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():169:56
    # Var: string t:469 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():178:39
    # Var: string t:473 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():178:63
    # Var: string t:479 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():178:125
    # Var: string t:514 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():181:223
    # Var: $string v:t:535 VALUE_OF [string:__t:535]
    # Var: $string v:t:382 VALUE_OF [string:__t:382]
    # Var: $string v:t:534 VALUE_OF [string:__t:534]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    lassign [ adlb::multicreate [ list string 1 1 125 ] [ list string 1 1 126 ] [ list string 1 1 127 ] [ list string 1 1 128 ] [ list string 1 1 129 ] [ list string 1 1 130 ] [ list string 1 1 131 ] ] t:428 t:435 t:437 t:469 t:473 t:479 t:514
    turbine::c::log "allocated t:428=<${t:428}> t:435=<${t:435}> t:437=<${t:437}> t:469=<${t:469}> t:473=<${t:473}>"
    turbine::c::log "allocated t:479=<${t:479}> t:514=<${t:514}>"
    set v:t:383 "####   Realign-Vcall script for SAMPLE ${v:alias:sampleName}"
    set v:t:420 "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   ${v:alias:sampleName}"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:428} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:435} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:437} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:469} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:473} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:479} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:514} string
    set v:t:535 "#############    GATK VARIANT CALLING   FOR SAMPLE ${v:alias:sampleName}"
    set v:t:382 "${v:t:383} chr="
    set v:t:534 "${v:t:535} : "
    set v:RealignDir "${v:t:35}/realign/"
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:428} ${t:435} ${t:437} ${t:469} ${t:473} ${t:479} ${t:514} ${t:628} ${v:RealignDir} ${v:alias:sampleName} ${v:t:363} ${v:t:382} ${v:t:420} ${v:t:534} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ]
    turbine::rule [ list ${t:241} ] [ list samtools_flagstat-app-leaf1 ${t:241} ${v:t:29} ${v:t:62} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { u:RealignDir u:VarcallDir t:241 t:428 t:435 t:437 t:469 t:473 t:479 t:514 t:628 v:RealignDir v:alias:sampleName v:t:363 v:t:382 v:t:420 v:t:534 u:chromosomes_processing_done u:dedupsortedbam u:indices } {
    # Var: int t:427 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():165:74
    # Var: string t:476 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():178:124
    # Var: string t:511 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():181:222
    # Var: string t:433 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():169:28
    # Var: string t:471 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():178:56
    lassign [ adlb::multicreate [ list integer 1 1 132 ] [ list string 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] ] t:427 t:476 t:511 t:433 t:471
    turbine::c::log "allocated t:427=<${t:427}> t:476=<${t:476}> t:511=<${t:511}> t:433=<${t:433}> t:471=<${t:471}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:471} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:241} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:511} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:476} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:427} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:469} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:628} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:427} ${t:433} ${t:469} ${t:471} ${t:476} ${t:511} ${t:628} ${v:RealignDir} ${v:alias:sampleName} ${v:t:363} ${v:t:382} ${v:t:420} ${v:t:534} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:428} ] "__entry-async_op-parse_int-6 ${t:427} ${t:428}"
    turbine::rule [ list ${t:473} ] "__entry-async_op-dircat-4 ${t:471} ${t:473}"
    turbine::rule [ list ${t:435} ] "__entry-optmerged-6 ${t:433} ${t:435} ${t:437} ${t:476} ${t:479} ${t:511} ${t:514}"
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:433} 1
}


proc __entry-foreach2:outer { u:RealignDir u:VarcallDir t:241 t:427 t:433 t:469 t:471 t:476 t:511 t:628 v:RealignDir v:alias:sampleName v:t:363 v:t:382 v:t:420 v:t:534 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:427} ${t:433} ${t:469} ${t:471} ${t:476} ${t:511} ${t:628} ${v:RealignDir} ${v:alias:sampleName} ${v:t:363} ${v:t:382} ${v:t:420} ${v:t:534} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${u:RealignDir} ${u:VarcallDir} ${t:241} ${t:427} ${t:433} ${t:469} ${t:471} ${t:476} ${t:511} ${t:628} ${v:RealignDir} ${v:alias:sampleName} ${v:t:363} ${v:t:382} ${v:t:420} ${v:t:534} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { u:RealignDir u:VarcallDir t:241 t:427 t:433 t:469 t:471 t:476 t:511 t:628 v:RealignDir v:alias:sampleName v:t:363 v:t:382 v:t:420 v:t:534 u:chromosomes_processing_done u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam VCcallingPipeline.swift:__entry():152:68
        # Var: file u:realignedbam VCcallingPipeline.swift:__entry():153:63
        # Var: file u:recalibratedbam VCcallingPipeline.swift:__entry():154:66
        # Var: file u:intervals VCcallingPipeline.swift:__entry():155:61
        # Var: file u:recalreport VCcallingPipeline.swift:__entry():156:63
        # Var: file u:gvcfvariant VCcallingPipeline.swift:__entry():157:62
        # Var: file u:recalfiles VCcallingPipeline.swift:__entry():159:70
        # Var: file u:realfiles VCcallingPipeline.swift:__entry():160:69
        # Var: int u:ploidy VCcallingPipeline.swift:__entry():163:3
        # Var: string t:430 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():165:104
        # Var: string t:440 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():169:80
        # Var: string[int] u:recalparmsindels VCcallingPipeline.swift:__entry():170:3
        # Var: file t:445 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():170:54
        # Var: string[int] u:realparms VCcallingPipeline.swift:__entry():173:3
        # Var: file t:463 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():173:47
        # Var: $string v:t:381 VALUE_OF [string:__t:381]
        # Var: $string v:t:380 VALUE_OF [string:__t:380]
        # Var: $void v:t:379 VALUE_OF [void:__t:379]
        # Var: $string v:t:419 VALUE_OF [string:__t:419]
        # Var: $string v:t:418 VALUE_OF [string:__t:418]
        # Var: $void v:t:417 VALUE_OF [void:__t:417]
        # Var: $boolean v:t:423 VALUE_OF [boolean:__t:423]
        # Var: $string v:t:430 VALUE_OF [string:__t:430]
        # Var: $string v:t:440 VALUE_OF [string:__t:440]
        # Var: $string v:t:533 VALUE_OF [string:__t:533]
        # Var: $string v:t:532 VALUE_OF [string:__t:532]
        # Var: $void v:t:531 VALUE_OF [void:__t:531]
        # Var: $string v:t:402 VALUE_OF [string:__t:402]
        # Var: $string v:t:393 VALUE_OF [string:__t:393]
        # Var: $string v:t:396 VALUE_OF [string:__t:396]
        # Var: $string v:t:399 VALUE_OF [string:__t:399]
        # Var: $string v:t:390 VALUE_OF [string:__t:390]
        # Var: $string v:t:387 VALUE_OF [string:__t:387]
        lassign [ adlb::multicreate [ list integer 1 1 145 ] [ list string 1 1 146 ] [ list string 1 1 147 ] [ list container integer string 1 1 148 ] [ list container integer string 1 1 150 ] ] u:ploidy t:430 t:440 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:430=<${t:430}> t:440=<${t:440}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 137 ] [ list file 1 1 138 ] [ list file 1 1 139 ] [ list file 1 1 140 ] [ list file 1 1 141 ] [ list file 0 1 142 ] [ list file 1 1 143 ] [ list file 1 1 144 ] [ list file 1 1 149 ] [ list file 1 1 151 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:445 t:463
        set v:t:381 "${v:t:382}${v:chr}"
        set v:t:380 "${v:t:381}                             #######"
        turbine::trace_impl ${v:t:380}
        set v:t:419 "${v:t:420}${v:chr}"
        set v:t:418 "${v:t:419}        ######"
        turbine::trace_impl ${v:t:418}
        set v:t:423 [ string equal ${v:chr} "M" ]
        set v:t:430 "${v:chr}"
        turbine::store_string ${t:430} ${v:t:430}
        f:samtools_view ${u:chrdedupsortedbam} ${t:241} ${u:dedupsortedbam} ${t:427} ${t:430} -100 "HARD" "RANK"
        set v:t:440 "*${v:chr}.vcf"
        turbine::store_string ${t:440} ${v:t:440}
        f:find_files ${u:recalfiles} ${t:433} ${t:440} -100 "HARD" "RANK"
        f:sed ${t:445} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:433} ${t:440} -100 "HARD" "RANK"
        f:sed ${t:463} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        set v:t:533 "${v:t:534}${v:chr}"
        set v:t:532 "${v:t:533}   ###########"
        turbine::trace_impl ${v:t:532}
        if { ${v:t:423} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:402 "${v:t:363}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:402}
        turbine::store_string ${u:RealignDir} ${v:RealignDir}
        turbine::store_string ${u:VarcallDir} ${v:t:363}
        set v:t:393 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:393}
        set v:t:396 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        turbine::set_filename_val ${u:intervals} ${v:t:396}
        set v:t:399 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        turbine::set_filename_val ${u:recalreport} ${v:t:399}
        set v:t:390 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        turbine::set_filename_val ${u:realignedbam} ${v:t:390}
        set v:t:387 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:387}
        turbine::rule [ list [ turbine::get_file_td ${t:445} ] ] "__entry-call_foreign-read-3 {${t:445}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:463} ] ] [ list __entry-call_foreign-read-4 ${t:427} ${t:463} ${t:469} ${t:471} ${t:476} ${t:511} ${v:chr} ${v:t:387} ${v:t:390} ${v:t:393} ${v:t:396} ${v:t:399} ${v:t:402} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::rule [ list ${t:628} ] [ list __entry-optmerged-5 ${t:628} ${v:alias:sampleName} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:241} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list samtools_index-app-leaf1 ${t:241} ${v:t:387} ${u:chrdedupsortedbam} ]
        turbine::read_refcount_decr ${t:430} 1
        turbine::read_refcount_decr ${t:440} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:indices} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:445 u:recalparmsindels } {
    # Var: $file v:t:445 VALUE_OF [file:__t:445]
    # Var: $string v:t:444 VALUE_OF [string:__t:444]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:443 VALUE_OF [string:__t:443]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:445 [ turbine::retrieve_file ${t:445} CACHED 1 ]
    set v:t:444 [ turbine::file_read_local ${v:t:445} ]
    set v:n [ string length ${v:t:444} ]
    set v:t:443 [ turbine::replace_all_impl ${v:t:444} "\n" "" 0 ${v:n} ]
    set v:recalparmsindels [ turbine::split_impl ${v:t:443} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:427 t:463 t:469 t:471 t:476 t:511 v:chr v:t:387 v:t:390 v:t:393 v:t:396 v:t:399 v:t:402 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:t:463 VALUE_OF [file:__t:463]
    # Var: $string v:t:462 VALUE_OF [string:__t:462]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:461 VALUE_OF [string:__t:461]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:463 [ turbine::retrieve_file ${t:463} CACHED 1 ]
    set v:t:462 [ turbine::file_read_local ${v:t:463} ]
    set v:n:1 [ string length ${v:t:462} ]
    set v:t:461 [ turbine::replace_all_impl ${v:t:462} "\n" "" 0 ${v:n:1} ]
    set v:realparms [ turbine::split_impl ${v:t:461} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    turbine::rule [ list ${t:427} ${t:469} ${t:471} ${t:476} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list RealignerTargetCreator-app-leaf1 ${t:427} ${t:469} ${t:471} ${t:476} ${t:511} ${v:chr} ${v:t:387} ${v:t:390} ${v:t:393} ${v:t:396} ${v:t:399} ${v:t:402} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc RealignerTargetCreator-app-leaf1 { t:427 t:469 t:471 t:476 t:511 v:chr v:t:387 v:t:390 v:t:393 v:t:396 v:t:399 v:t:402 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    set v:javadir:1 [ turbine::retrieve_string ${t:469} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:471} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:476} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:427} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:396} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:387} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:396} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:387} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:396}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:511} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:t:387} ${v:t:390} ${v:t:393} ${v:t:396} ${v:t:399} ${v:t:402} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:511 v:chr v:gatkdir v:javadir:1 v:known v:reference v:t:387 v:t:390 v:t:393 v:t:396 v:t:399 v:t:402 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:intervals u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    set v:inputFile:3 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:390} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:387} {*}${v:known} "--targetIntervals" ${v:t:396} "-o" ${v:t:390} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:387} {*}${v:known} "--targetIntervals" ${v:t:396} "-o" ${v:t:390}
    turbine::store_file ${u:realignedbam} v:outputfile:2 0
    turbine::rule [ list ${t:511} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:511} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:390} ${v:t:393} ${v:t:399} ${v:t:402} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:2
}


proc BaseRecalibrator-app-leaf1 { t:511 v:chr v:gatkdir v:javadir:1 v:reference v:t:390 v:t:393 v:t:399 v:t:402 v:thr u:chromosomes_processing_done u:gvcfvariant u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    set v:dbsnp [ turbine::retrieve_string ${t:511} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:399} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:390} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:399} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:390} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:399}
    turbine::store_file ${u:recalreport} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list PrintReads-app-leaf1 ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:390} ${v:t:393} ${v:t:399} ${v:t:402} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:390 v:t:393 v:t:399 v:t:402 v:thr u:chromosomes_processing_done u:gvcfvariant u:ploidy u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    set v:inputFile:5 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:393} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:390} "-BQSR" ${v:t:399} "-nct" ${v:thr} "--out" ${v:t:393} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:390} "-BQSR" ${v:t:399} "-nct" ${v:thr} "--out" ${v:t:393}
    turbine::store_file ${u:recalibratedbam} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:t:393} ${v:t:402} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:ploidy} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
}


proc HaplotypeCaller-app-leaf1 { v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:t:393 v:t:402 v:thr u:chromosomes_processing_done u:gvcfvariant u:ploidy u:recalibratedbam } {
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:inputFile:6 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:inputFile:6 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:402} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:393} "--dbsnp" ${v:dbsnp} "-o" ${v:t:402} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:393} "--dbsnp" ${v:dbsnp} "-o" ${v:t:402} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    turbine::store_integer ${u:chromosomes_processing_done} 1
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-optmerged-5 { t:628 v:alias:sampleName v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:628:4 VALUE_OF [string:__t:628]
    # Var: $string v:t:405 VALUE_OF [string:__t:405]
    # Var: $string v:t:411 VALUE_OF [string:__t:411]
    set v:t:628:4 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:t:405 "${v:t:628:4}.${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    set v:t:411 "${v:t:628:4}.${v:alias:sampleName}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:405}
    turbine::set_filename_val ${u:realfiles} ${v:t:411}
}


proc samtools_index-app-leaf1 { t:241 v:t:387 u:chrdedupsortedbam } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${t:241} CACHED 1 ]
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:t:387} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:t:387}
}


proc __entry-async_op-parse_int-6 { t:427 t:428 } {
    # Var: $string v:t:428 VALUE_OF [string:__t:428]
    # Var: $int v:t:427 VALUE_OF [int:__t:427]
    set v:t:428 [ turbine::retrieve_string ${t:428} CACHED 1 ]
    set v:t:427 [ turbine::parse_int_impl ${v:t:428} 10 ]
    turbine::store_integer ${t:427} ${v:t:427}
}


proc __entry-async_op-dircat-4 { t:471 t:473 } {
    # Var: $string v:t:473 VALUE_OF [string:__t:473]
    # Var: $string v:t:472 VALUE_OF [string:__t:472]
    # Var: $string v:t:471 VALUE_OF [string:__t:471]
    set v:t:473 [ turbine::retrieve_string ${t:473} CACHED 1 ]
    set v:t:472 "${v:t:473}/GenomeAnalysisTK.jar"
    set v:t:471 "${v:t:472}"
    turbine::store_string ${t:471} ${v:t:471}
}


proc __entry-optmerged-6 { t:433 t:435 t:437 t:476 t:479 t:511 t:514 } {
    # Var: $string v:t:435 VALUE_OF [string:__t:435]
    set v:t:435 [ turbine::retrieve_string ${t:435} CACHED 1 ]
    turbine::rule [ list ${t:437} ] [ list __entry-async_op-dircat-5 ${t:433} ${t:437} ${v:t:435} ]
    turbine::rule [ list ${t:479} ] [ list __entry-async_op-dircat-6 ${t:476} ${t:479} ${v:t:435} ]
    turbine::rule [ list ${t:514} ] [ list __entry-async_op-dircat-7 ${t:511} ${t:514} ${v:t:435} ]
}


proc __entry-async_op-dircat-5 { t:433 t:437 v:t:435 } {
    # Var: $string v:t:437 VALUE_OF [string:__t:437]
    # Var: $string v:t:434 VALUE_OF [string:__t:434]
    # Var: $string v:t:433 VALUE_OF [string:__t:433]
    set v:t:437 [ turbine::retrieve_string ${t:437} CACHED 1 ]
    set v:t:434 "${v:t:435}/${v:t:437}"
    set v:t:433 "${v:t:434}/"
    turbine::store_string ${t:433} ${v:t:433}
}


proc __entry-async_op-dircat-6 { t:476 t:479 v:t:435 } {
    # Var: $string v:t:479 VALUE_OF [string:__t:479]
    # Var: $string v:t:476 VALUE_OF [string:__t:476]
    set v:t:479 [ turbine::retrieve_string ${t:479} CACHED 1 ]
    set v:t:476 "${v:t:435}/${v:t:479}"
    turbine::store_string ${t:476} ${v:t:476}
}


proc __entry-async_op-dircat-7 { t:511 t:514 v:t:435 } {
    # Var: $string v:t:514 VALUE_OF [string:__t:514]
    # Var: $string v:t:511 VALUE_OF [string:__t:511]
    set v:t:514 [ turbine::retrieve_string ${t:514} CACHED 1 ]
    set v:t:511 "${v:t:435}/${v:t:514}"
    turbine::store_string ${t:511} ${v:t:511}
}


proc samtools_flagstat-app-leaf1 { t:241 v:t:29 v:t:62 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:inputFile:7 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:241} CACHED 1 ]
    set v:inputFile:7 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:62} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:1 "flagstat" ${v:t:29} [ dict create "stdout" ${v:t:62} ] ]
    turbine::exec_external ${v:samtoolsdir:1} [ dict create "stdout" ${v:t:62} ] "flagstat" ${v:t:29}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc mkdir-app-leaf1 { v:t:363 } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:363} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:363}
}


proc __entry-optmerged-7 { t:24 t:628 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:628:1 VALUE_OF [string:__t:628]
    # Var: $string v:t:24 VALUE_OF [string:__t:24]
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    # Var: $string v:t:68 VALUE_OF [string:__t:68]
    # Var: $string v:t:73 VALUE_OF [string:__t:73]
    set v:t:628:1 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:t:24 "${v:t:628:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:24} ${v:t:24}
    set v:t:69 "${v:t:628:1}/${v:alias:sampleName}"
    turbine::set_filename_val ${u:alignedsam} ${v:t:24}
    set v:t:68 "${v:t:69}.chr_bamList.txt"
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:68}
    set v:t:73 "${v:t:69}.chr_vcfList.txt"
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:73}
}


proc __entry-async_op-strcat-10 { t:628 u:variantFiles } {
    # Var: $string v:t:628 VALUE_OF [string:__t:628]
    # Var: $string v:t:627 VALUE_OF [string:__t:627]
    set v:t:628 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:t:627 "${v:t:628}variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:627}
}


proc __entry-async_op-eq_string-2 { t:78 t:79 } {
    # Var: $string v:t:79 VALUE_OF [string:__t:79]
    # Var: $boolean v:t:78 VALUE_OF [boolean:__t:78]
    set v:t:79 [ turbine::retrieve_string ${t:79} CACHED 1 ]
    set v:t:78 [ string equal ${v:t:79} "SAMBLASTER" ]
    turbine::store_integer ${t:78} ${v:t:78}
}


proc __entry-async_op-parse_float-4 { t:233 t:261 } {
    # Var: $string v:t:233 VALUE_OF [string:__t:233]
    # Var: $float v:t:261 VALUE_OF [float:__t:261]
    set v:t:233 [ turbine::retrieve_string ${t:233} CACHED 1 ]
    set v:t:261 [ turbine::string2float_impl ${v:t:233} ]
    turbine::store_float ${t:261} ${v:t:261}
}


proc __entry-call_foreign-split-3 { t:368 u:indices } {
    # Var: $string v:t:368 VALUE_OF [string:__t:368]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:368 [ turbine::retrieve_string ${t:368} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:368} ":" ]
    turbine::build_rec ${u:indices} ${v:indices} [ list container integer string ] 0 1
}


proc __entry-optmerged-8 { t:17 t:619 t:620 t:621 t:623 u:jointVCF } {
    # Var: $string v:t:621 VALUE_OF [string:__t:621]
    # Var: $string v:t:623 VALUE_OF [string:__t:623]
    # Var: $string v:t:620 VALUE_OF [string:__t:620]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:619 VALUE_OF [string:__t:619]
    # Var: $string v:t:632 VALUE_OF [string:__t:632]
    set v:t:621 [ turbine::retrieve_string ${t:621} CACHED 1 ]
    set v:t:623 [ turbine::retrieve_string ${t:623} CACHED 1 ]
    set v:t:620 "${v:t:621}/${v:t:623}"
    turbine::store_string ${t:620} ${v:t:620}
    set v:t:17 "${v:t:621}/${v:t:623}/docs/QC_test_results.txt"
    turbine::store_string ${t:17} ${v:t:17}
    set v:t:619 "${v:t:620}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:619} ${v:t:619}
    turbine::set_filename_val ${u:jointVCF} ${v:t:619}
    set v:t:632 "${v:t:620}/jointVCFs"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:t:632} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-1 { v:t:632 } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:632} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:632}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:bwamemparams VALUE_OF [string:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::retrieve_string ${u:bwamemparams} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:u v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:u} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ${u:u} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}} {${u:u}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:output u:samtoolsdir u:thr u:u } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:u VALUE_OF [string:u] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:u [ turbine::retrieve_string ${u:u} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():27:72
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():27:72
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_-4" ""
adlb::add_debug_symbol 2 "__c:s__GATKCombi-1" ""
adlb::add_debug_symbol 3 "__c:s_compressio" ""
adlb::add_debug_symbol 4 "__c:s_markDuplic" ""
adlb::add_debug_symbol 5 "__c:s_sknownSite" ""
adlb::add_debug_symbol 6 "__c:s_sknown_g" ""
adlb::add_debug_symbol 7 "__c:s_svariant_g" ""
adlb::add_debug_symbol 8 "__c:s_u" ""
adlb::add_debug_symbol 9 "__t:7" "VCcallingPipeline:27:33"
adlb::add_debug_symbol 10 "__t:619" "VCcallingPipeline:223:16"
adlb::add_debug_symbol 11 "__t:620" "VCcallingPipeline:223:40"
adlb::add_debug_symbol 12 "__t:621" "VCcallingPipeline:223:23"
adlb::add_debug_symbol 13 "__t:623" "VCcallingPipeline:223:41"
adlb::add_debug_symbol 14 "__t:628" "VCcallingPipeline:224:27"
adlb::add_debug_symbol 15 "samples_processing_done" "VCcallingPipeline:29:0"
adlb::add_debug_symbol 16 "jointVCF" "VCcallingPipeline:223:80"
adlb::add_debug_symbol 17 "configFile" "VCcallingPipeline:22:0"
adlb::add_debug_symbol 18 "sampleInfoFile" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 19 "vars" "VCcallingPipeline:25:0"
adlb::add_debug_symbol 20 "variantFiles" "VCcallingPipeline:224:42"
adlb::add_debug_symbol 21 "__t:11" "VCcallingPipeline:__entry():39:88"
adlb::add_debug_symbol 22 "__t:13" "VCcallingPipeline:__entry():39:106"
adlb::add_debug_symbol 23 "__t:15" "VCcallingPipeline:__entry():39:148"
adlb::add_debug_symbol 24 "__t:17" "VCcallingPipeline:__entry():45:14"
adlb::add_debug_symbol 25 "__t:79" "VCcallingPipeline:__entry():61:5"
adlb::add_debug_symbol 26 "__t:233" "VCcallingPipeline:__entry():105:54"
adlb::add_debug_symbol 27 "__t:238" "VCcallingPipeline:__entry():106:55"
adlb::add_debug_symbol 28 "__t:241" "VCcallingPipeline:__entry():108:31"
adlb::add_debug_symbol 29 "__t:368" "VCcallingPipeline:__entry():144:17"
adlb::add_debug_symbol 30 "__t:78" "VCcallingPipeline:__entry():61:32"
adlb::add_debug_symbol 31 "__t:261" "VCcallingPipeline:__entry():118:17"
adlb::add_debug_symbol 32 "indices" "VCcallingPipeline:__entry():144:9"
adlb::add_debug_symbol 33 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 34 "varlist" "VCcallingPipeline:__entry():228:1"
adlb::add_debug_symbol 35 "__t:645" "VCcallingPipeline:__entry():228:43"
adlb::add_debug_symbol 36 "__t:651" "VCcallingPipeline:__entry():229:27"
adlb::add_debug_symbol 37 "__t:653" "VCcallingPipeline:__entry():229:44"
adlb::add_debug_symbol 38 "__t:655" "VCcallingPipeline:__entry():229:51"
adlb::add_debug_symbol 39 "__t:658" "VCcallingPipeline:__entry():229:112"
adlb::add_debug_symbol 40 "__t:659" "VCcallingPipeline:__entry():229:92"
adlb::add_debug_symbol 41 "__t:661" "VCcallingPipeline:__entry():229:113"
adlb::add_debug_symbol 42 "sampleInfo" "VCcallingPipeline:__entry():34:1"
adlb::add_debug_symbol 43 "read1" "VCcallingPipeline:__entry():36:1"
adlb::add_debug_symbol 44 "read2" "VCcallingPipeline:__entry():37:1"
adlb::add_debug_symbol 45 "rgheader" "VCcallingPipeline:__entry():39:1"
adlb::add_debug_symbol 46 "qcfile" "VCcallingPipeline:__entry():45:69"
adlb::add_debug_symbol 47 "__t:24" "VCcallingPipeline:__entry():47:18"
adlb::add_debug_symbol 48 "alignedsam" "VCcallingPipeline:__entry():47:63"
adlb::add_debug_symbol 49 "__t:29" "VCcallingPipeline:__entry():49:22"
adlb::add_debug_symbol 50 "dedupsortedbam" "VCcallingPipeline:__entry():49:71"
adlb::add_debug_symbol 51 "__t:34" "VCcallingPipeline:__entry():50:15"
adlb::add_debug_symbol 52 "outbam" "VCcallingPipeline:__entry():50:77"
adlb::add_debug_symbol 53 "__t:40" "VCcallingPipeline:__entry():51:19"
adlb::add_debug_symbol 54 "rawvariant" "VCcallingPipeline:__entry():51:81"
adlb::add_debug_symbol 55 "mergedbam" "VCcallingPipeline:__entry():52:78"
adlb::add_debug_symbol 56 "mergedvariant" "VCcallingPipeline:__entry():53:82"
adlb::add_debug_symbol 57 "flagstats" "VCcallingPipeline:__entry():56:87"
adlb::add_debug_symbol 58 "chr_bamListfile" "VCcallingPipeline:__entry():58:57"
adlb::add_debug_symbol 59 "chr_vcfListfile" "VCcallingPipeline:__entry():59:57"
adlb::add_debug_symbol 60 "stat" "VCcallingPipeline:__entry():110:1"
adlb::add_debug_symbol 61 "__t:243" "VCcallingPipeline:__entry():111:14"
adlb::add_debug_symbol 62 "__t:246" "VCcallingPipeline:__entry():112:13"
adlb::add_debug_symbol 63 "__t:249" "VCcallingPipeline:__entry():113:12"
adlb::add_debug_symbol 64 "perc_mapped" "VCcallingPipeline:__entry():116:12"
adlb::add_debug_symbol 65 "__t:256" "VCcallingPipeline:__entry():116:38"
adlb::add_debug_symbol 66 "VarcallDir" "VCcallingPipeline:__entry():140:1"
adlb::add_debug_symbol 67 "RealignDir" "VCcallingPipeline:__entry():141:1"
adlb::add_debug_symbol 68 "chromosomes_processing_done" "VCcallingPipeline:__entry():143:1"
adlb::add_debug_symbol 69 "chr_bamList" "VCcallingPipeline:__entry():198:1"
adlb::add_debug_symbol 70 "chr_vcfList" "VCcallingPipeline:__entry():204:1"
adlb::add_debug_symbol 71 "__t:592" "VCcallingPipeline:__entry():204:47"
adlb::add_debug_symbol 72 "__t:84" "VCcallingPipeline:__entry():63:17"
adlb::add_debug_symbol 73 "dedupsam" "VCcallingPipeline:__entry():63:63"
adlb::add_debug_symbol 74 "dedupbam" "VCcallingPipeline:__entry():64:66"
adlb::add_debug_symbol 75 "__t:94" "VCcallingPipeline:__entry():66:23"
adlb::add_debug_symbol 76 "__t:96" "VCcallingPipeline:__entry():66:53"
adlb::add_debug_symbol 77 "__t:98" "VCcallingPipeline:__entry():66:71"
adlb::add_debug_symbol 78 "__t:100" "VCcallingPipeline:__entry():66:93"
adlb::add_debug_symbol 79 "__t:101" "VCcallingPipeline:__entry():66:104"
adlb::add_debug_symbol 80 "__t:103" "VCcallingPipeline:__entry():67:24"
adlb::add_debug_symbol 81 "__t:111" "VCcallingPipeline:__entry():70:28"
adlb::add_debug_symbol 82 "__t:112" "VCcallingPipeline:__entry():70:35"
adlb::add_debug_symbol 83 "alignedbam" "VCcallingPipeline:__entry():74:67"
adlb::add_debug_symbol 84 "__t:133" "VCcallingPipeline:__entry():77:26"
adlb::add_debug_symbol 85 "alignedsortedbam" "VCcallingPipeline:__entry():77:75"
adlb::add_debug_symbol 86 "__t:138" "VCcallingPipeline:__entry():78:21"
adlb::add_debug_symbol 87 "metricsfile" "VCcallingPipeline:__entry():78:70"
adlb::add_debug_symbol 88 "__t:143" "VCcallingPipeline:__entry():79:24"
adlb::add_debug_symbol 89 "__t:145" "VCcallingPipeline:__entry():79:54"
adlb::add_debug_symbol 90 "__t:147" "VCcallingPipeline:__entry():79:72"
adlb::add_debug_symbol 91 "__t:149" "VCcallingPipeline:__entry():79:94"
adlb::add_debug_symbol 92 "__t:150" "VCcallingPipeline:__entry():79:105"
adlb::add_debug_symbol 93 "__t:158" "VCcallingPipeline:__entry():82:31"
adlb::add_debug_symbol 94 "__t:159" "VCcallingPipeline:__entry():82:38"
adlb::add_debug_symbol 95 "__t:169" "VCcallingPipeline:__entry():83:39"
adlb::add_debug_symbol 96 "__t:171" "VCcallingPipeline:__entry():83:56"
adlb::add_debug_symbol 97 "__t:178" "VCcallingPipeline:__entry():88:7"
adlb::add_debug_symbol 98 "__t:214" "VCcallingPipeline:__entry():97:30"
adlb::add_debug_symbol 99 "__t:215" "VCcallingPipeline:__entry():97:37"
adlb::add_debug_symbol 100 "__t:221" "VCcallingPipeline:__entry():97:102"
adlb::add_debug_symbol 101 "__t:222" "VCcallingPipeline:__entry():97:113"
adlb::add_debug_symbol 102 "__t:181" "VCcallingPipeline:__entry():89:25"
adlb::add_debug_symbol 103 "__t:183" "VCcallingPipeline:__entry():89:55"
adlb::add_debug_symbol 104 "__t:185" "VCcallingPipeline:__entry():89:73"
adlb::add_debug_symbol 105 "__t:187" "VCcallingPipeline:__entry():89:95"
adlb::add_debug_symbol 106 "__t:188" "VCcallingPipeline:__entry():89:106"
adlb::add_debug_symbol 107 "__t:197" "VCcallingPipeline:__entry():92:34"
adlb::add_debug_symbol 108 "__t:201" "VCcallingPipeline:__entry():92:87"
adlb::add_debug_symbol 109 "__t:203" "VCcallingPipeline:__entry():92:111"
adlb::add_debug_symbol 110 "__t:205" "VCcallingPipeline:__entry():92:136"
adlb::add_debug_symbol 111 "__t:206" "VCcallingPipeline:__entry():92:147"
adlb::add_debug_symbol 112 "__t:559" "VCcallingPipeline:__entry():192:44"
adlb::add_debug_symbol 113 "__t:561" "VCcallingPipeline:__entry():193:44"
adlb::add_debug_symbol 114 "__t:575" "VCcallingPipeline:__entry():199:27"
adlb::add_debug_symbol 115 "__t:582" "VCcallingPipeline:__entry():199:105"
adlb::add_debug_symbol 116 "__t:290" "VCcallingPipeline:__entry():122:205"
adlb::add_debug_symbol 117 "__t:317" "VCcallingPipeline:__entry():125:209"
adlb::add_debug_symbol 118 "__t:344" "VCcallingPipeline:__entry():129:218"
adlb::add_debug_symbol 119 "__t:598" "VCcallingPipeline:__entry():205:28"
adlb::add_debug_symbol 120 "__t:602" "VCcallingPipeline:__entry():205:52"
adlb::add_debug_symbol 121 "__t:606" "VCcallingPipeline:__entry():205:93"
adlb::add_debug_symbol 122 "__t:608" "VCcallingPipeline:__entry():205:114"
adlb::add_debug_symbol 123 "__t:610" "VCcallingPipeline:__entry():205:153"
adlb::add_debug_symbol 124 "__t:613" "VCcallingPipeline:__entry():205:154"
adlb::add_debug_symbol 125 "__t:428" "VCcallingPipeline:__entry():165:85"
adlb::add_debug_symbol 126 "__t:435" "VCcallingPipeline:__entry():169:35"
adlb::add_debug_symbol 127 "__t:437" "VCcallingPipeline:__entry():169:56"
adlb::add_debug_symbol 128 "__t:469" "VCcallingPipeline:__entry():178:39"
adlb::add_debug_symbol 129 "__t:473" "VCcallingPipeline:__entry():178:63"
adlb::add_debug_symbol 130 "__t:479" "VCcallingPipeline:__entry():178:125"
adlb::add_debug_symbol 131 "__t:514" "VCcallingPipeline:__entry():181:223"
adlb::add_debug_symbol 132 "__t:427" "VCcallingPipeline:__entry():165:74"
adlb::add_debug_symbol 133 "__t:476" "VCcallingPipeline:__entry():178:124"
adlb::add_debug_symbol 134 "__t:511" "VCcallingPipeline:__entry():181:222"
adlb::add_debug_symbol 135 "__t:433" "VCcallingPipeline:__entry():169:28"
adlb::add_debug_symbol 136 "__t:471" "VCcallingPipeline:__entry():178:56"
adlb::add_debug_symbol 137 "chrdedupsortedbam" "VCcallingPipeline:__entry():152:68"
adlb::add_debug_symbol 138 "realignedbam" "VCcallingPipeline:__entry():153:63"
adlb::add_debug_symbol 139 "recalibratedbam" "VCcallingPipeline:__entry():154:66"
adlb::add_debug_symbol 140 "intervals" "VCcallingPipeline:__entry():155:61"
adlb::add_debug_symbol 141 "recalreport" "VCcallingPipeline:__entry():156:63"
adlb::add_debug_symbol 142 "gvcfvariant" "VCcallingPipeline:__entry():157:62"
adlb::add_debug_symbol 143 "recalfiles" "VCcallingPipeline:__entry():159:70"
adlb::add_debug_symbol 144 "realfiles" "VCcallingPipeline:__entry():160:69"
adlb::add_debug_symbol 145 "ploidy" "VCcallingPipeline:__entry():163:3"
adlb::add_debug_symbol 146 "__t:430" "VCcallingPipeline:__entry():165:104"
adlb::add_debug_symbol 147 "__t:440" "VCcallingPipeline:__entry():169:80"
adlb::add_debug_symbol 148 "recalparmsindels" "VCcallingPipeline:__entry():170:3"
adlb::add_debug_symbol 149 "__t:445" "VCcallingPipeline:__entry():170:54"
adlb::add_debug_symbol 150 "realparms" "VCcallingPipeline:__entry():173:3"
adlb::add_debug_symbol 151 "__t:463" "VCcallingPipeline:__entry():173:47"
turbine::start swift:main swift:constants
turbine::finalize
