
# Generated by stc version 0.6.0
# date                    : 2016/09/29 08:03:30
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-VCcallingPipeline.CMA.tic
# STC home                : /usr/local/src/swift-t-0.9.1/stc
# Turbine home            : /usr/local/src/swift-t-0.9.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-VCcallingPipeline.CMA.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.1/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.1/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-5
    turbine::allocate_custom c:s_-5 string 1 1 1 1
    turbine::store_string ${c:s_-5} "\"\""
    global c:s_compressio
    turbine::allocate_custom c:s_compressio string 1 1 2 1
    turbine::store_string ${c:s_compressio} "--compression 1"
    global c:s_markDuplic
    turbine::allocate_custom c:s_markDuplic string 1 1 3 1
    turbine::store_string ${c:s_markDuplic} "--markDuplicates"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 4 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 5 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 6 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
    global c:s_u
    turbine::allocate_custom c:s_u string 1 1 7 1
    turbine::store_string ${c:s_u} "-u"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY VCcallingPipeline.swift:27:33
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:configFile VCcallingPipeline.swift:22:0
    # Var: file u:sampleInfoFile VCcallingPipeline.swift:27:0
    # Var: string[string] u:vars VCcallingPipeline.swift:25:0
    # Var: string t:11 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():38:88
    # Var: string t:13 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():38:106
    # Var: string t:15 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():38:148
    # Var: string t:18 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():44:21
    # Var: string t:21 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():44:45
    # Var: string t:25 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():46:25
    # Var: string t:38 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():53:5
    # Var: string t:195 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():95:54
    # Var: string t:200 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():96:55
    # Var: string t:203 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():98:31
    # Var: string t:329 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():133:17
    # Var: string t:577 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():191:27
    # Var: string t:584 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():191:105
    # Var: string t:412 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():159:34
    # Var: string t:414 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():159:55
    # Var: string t:446 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():168:38
    # Var: string t:450 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():168:62
    # Var: string t:456 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():168:124
    # Var: string t:491 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():171:222
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: string t:17 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():44:14
    # Var: boolean t:37 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():53:32
    # Var: float t:223 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():108:17
    # Var: string[int] u:indices VCcallingPipeline.swift:__entry():133:9
    # Var: string t:576 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():191:20
    # Var: int t:583 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():191:94
    # Var: string t:453 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():168:123
    # Var: string t:488 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():171:221
    # Var: string t:410 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():159:27
    # Var: string t:448 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():168:55
    lassign [ adlb::multicreate [ list string 1 1 8 ] [ list container string string 21 1 11 ] [ list string 1 1 12 ] [ list string 1 1 13 ] [ list string 1 1 14 ] [ list string 2 1 15 ] [ list string 1 1 16 ] [ list string 1 1 17 ] [ list string 2 1 18 ] [ list string 2 1 19 ] [ list string 1 1 20 ] [ list string 1 1 21 ] [ list string 1 1 22 ] [ list string 2 1 23 ] [ list string 1 1 24 ] [ list string 1 1 25 ] [ list string 1 1 26 ] [ list string 1 1 27 ] [ list string 1 1 28 ] [ list string 1 1 29 ] [ list string 1 1 30 ] [ list string 1 1 31 ] [ list integer 1 1 32 ] [ list float 1 1 33 ] [ list container integer string 1 1 34 ] [ list string 1 1 35 ] [ list integer 1 1 36 ] [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] ] t:7 u:vars t:11 t:13 t:15 t:18 t:21 t:25 t:38 t:195 t:200 t:203 t:329 t:577 t:584 t:412 t:414 t:446 t:450 t:456 t:491 t:17 t:37 t:223 u:indices t:576 t:583 t:453 t:488 t:410 t:448
    turbine::c::log "allocated t:7=<${t:7}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}> t:15=<${t:15}>"
    turbine::c::log "allocated t:18=<${t:18}> t:21=<${t:21}> t:25=<${t:25}> t:38=<${t:38}> t:195=<${t:195}>"
    turbine::c::log "allocated t:200=<${t:200}> t:203=<${t:203}> t:329=<${t:329}> t:577=<${t:577}> t:584=<${t:584}>"
    turbine::c::log "allocated t:412=<${t:412}> t:414=<${t:414}> t:446=<${t:446}> t:450=<${t:450}> t:456=<${t:456}>"
    turbine::c::log "allocated t:491=<${t:491}> t:17=<${t:17}> t:37=<${t:37}> t:223=<${t:223}> u:indices=<${u:indices}>"
    turbine::c::log "allocated t:576=<${t:576}> t:583=<${t:583}> t:453=<${t:453}> t:488=<${t:488}> t:410=<${t:410}>"
    turbine::c::log "allocated t:448=<${t:448}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 9 ] [ list file 1 1 10 ] ] [ list 0 0 ] ] u:configFile u:sampleInfoFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:18} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:21} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:25} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:38} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:195} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:200} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:203} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:329} string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:577} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:584} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:412} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:414} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:446} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:450} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:456} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:491} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 41 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:17} ${t:18} ${t:195} ${t:200} ${t:203} ${t:223} ${t:25} ${t:37} ${t:38} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:576} ${t:577} ${t:583} ${t:7} ${u:indices} {${u:sampleInfoFile}} ${u:vars}"
    turbine::rule [ list ${t:18} ${t:21} ] "__entry-async_op-strcat-7 ${t:17} ${t:18} ${t:21}"
    turbine::rule [ list ${t:38} ] "__entry-async_op-eq_string-2 ${t:37} ${t:38}"
    turbine::rule [ list ${t:195} ] "__entry-async_op-parse_float-4 ${t:195} ${t:223}"
    turbine::rule [ list ${t:329} ] "__entry-call_foreign-split-3 ${t:329} ${u:indices}"
    turbine::rule [ list ${t:577} ] "__entry-async_op-strcat-8 ${t:576} ${t:577}"
    turbine::rule [ list ${t:584} ] "__entry-async_op-parse_int ${t:583} ${t:584}"
    turbine::rule [ list ${t:450} ] "__entry-async_op-dircat ${t:448} ${t:450}"
    turbine::rule [ list ${t:412} ] "__entry-optmerged-6 ${t:410} ${t:412} ${t:414} ${t:453} ${t:456} ${t:488} ${t:491}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:17 t:18 t:195 t:200 t:203 t:223 t:25 t:37 t:38 t:410 t:446 t:448 t:453 t:488 t:576 t:577 t:583 t:7 u:indices u:sampleInfoFile u:vars } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:17} ${t:18} ${t:195} ${t:200} ${t:203} ${t:223} ${t:25} ${t:37} ${t:38} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:576} ${t:577} ${t:583} {${v:sampleLines}} ${u:indices} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:17 t:18 t:195 t:200 t:203 t:223 t:25 t:37 t:38 t:410 t:446 t:448 t:453 t:488 t:576 t:577 t:583 v:sampleLines u:indices u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:17} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:583} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:18} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:488} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:576} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:203} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:577} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:25} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:37} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:200} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:453} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:223} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:38} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:410} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:195} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:448} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:446} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 5 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo VCcallingPipeline.swift:__entry():33:1
        # Var: string u:read1 VCcallingPipeline.swift:__entry():35:1
        # Var: string u:read2 VCcallingPipeline.swift:__entry():36:1
        # Var: string u:rgheader VCcallingPipeline.swift:__entry():38:1
        # Var: file u:qcfile VCcallingPipeline.swift:__entry():44:69
        # Var: string t:24 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():46:18
        # Var: file u:alignedsam VCcallingPipeline.swift:__entry():46:63
        # Var: string t:29 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():48:22
        # Var: file u:dedupsortedbam VCcallingPipeline.swift:__entry():48:71
        # Var: file u:flagstats VCcallingPipeline.swift:__entry():51:50
        # Var: string[int] u:stat VCcallingPipeline.swift:__entry():100:1
        # Var: string[int] t:205 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():101:14
        # Var: string[int] t:208 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():102:13
        # Var: string[int] t:211 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():103:12
        # Var: float u:perc_mapped VCcallingPipeline.swift:__entry():106:12
        # Var: float t:218 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():106:38
        # Var: string u:VarcallDir VCcallingPipeline.swift:__entry():130:1
        # Var: string t:324 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():130:45
        # Var: string t:541 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():182:15
        # Var: file u:outbam VCcallingPipeline.swift:__entry():182:77
        # Var: file u:rawvariant VCcallingPipeline.swift:__entry():183:81
        # Var: file u:chr_bamListfile VCcallingPipeline.swift:__entry():186:57
        # Var: file u:chr_vcfListfile VCcallingPipeline.swift:__entry():187:57
        # Var: string t:563 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():189:31
        # Var: string t:568 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():189:82
        # Var: string[int] u:chr_bamList VCcallingPipeline.swift:__entry():190:1
        # Var: string t:597 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():196:82
        # Var: file t:601 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():197:47
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        # Var: $void v:t:188 VALUE_OF [void:__t:188]
        # Var: $void v:t:190 VALUE_OF [void:__t:190]
        # Var: $void v:t:322 VALUE_OF [void:__t:322]
        # Var: $string v:t:538 VALUE_OF [string:__t:538]
        # Var: $string v:t:537 VALUE_OF [string:__t:537]
        # Var: $void v:t:536 VALUE_OF [void:__t:536]
        # Var: $string v:t:568 VALUE_OF [string:__t:568]
        # Var: $string v:t:589 VALUE_OF [string:__t:589]
        # Var: $string v:t:588 VALUE_OF [string:__t:588]
        # Var: $void v:t:587 VALUE_OF [void:__t:587]
        # Var: $string v:t:597 VALUE_OF [string:__t:597]
        # Var: $string v:t:336 VALUE_OF [string:__t:336]
        # Var: $string v:t:397 VALUE_OF [string:__t:397]
        # Var: $string v:t:512 VALUE_OF [string:__t:512]
        # Var: $string v:t:335 VALUE_OF [string:__t:335]
        # Var: $string v:t:511 VALUE_OF [string:__t:511]
        lassign [ adlb::multicreate [ list container integer string 1 2 42 ] [ list string 1 1 43 ] [ list string 1 1 44 ] [ list string 1 1 45 ] [ list string 2 1 47 ] [ list string 1 1 49 ] [ list container integer string 3 1 52 ] [ list container integer string 1 1 53 ] [ list container integer string 1 1 54 ] [ list container integer string 1 1 55 ] [ list float 2 1 56 ] [ list float 1 1 57 ] [ list string 1 1 58 ] [ list string 1 1 59 ] [ list string 1 1 60 ] [ list string 1 1 65 ] [ list string 1 1 66 ] [ list container integer string 1 1 67 ] [ list string 1 1 68 ] ] u:sampleInfo u:read1 u:read2 u:rgheader t:24 t:29 u:stat t:205 t:208 t:211 u:perc_mapped t:218 u:VarcallDir t:324 t:541 t:563 t:568 u:chr_bamList t:597
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> t:24=<${t:24}>"
        turbine::c::log "allocated t:29=<${t:29}> u:stat=<${u:stat}> t:205=<${t:205}> t:208=<${t:208}> t:211=<${t:211}>"
        turbine::c::log "allocated u:perc_mapped=<${u:perc_mapped}> t:218=<${t:218}> u:VarcallDir=<${u:VarcallDir}> t:324=<${t:324}> t:541=<${t:541}>"
        turbine::c::log "allocated t:563=<${t:563}> t:568=<${t:568}> u:chr_bamList=<${u:chr_bamList}> t:597=<${t:597}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 46 ] [ list file 2 1 48 ] [ list file 3 1 50 ] [ list file 1 1 51 ] [ list file 0 1 61 ] [ list file 0 1 62 ] [ list file 1 1 63 ] [ list file 1 1 64 ] [ list file 1 1 69 ] ] [ list 1 1 1 1 1 1 1 1 0 ] ] u:qcfile u:alignedsam u:dedupsortedbam u:flagstats u:outbam u:rawvariant u:chr_bamListfile u:chr_vcfListfile t:601
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        turbine::trace_impl "#############     END ALIGNMENT-DEDUPLICATION BLOCK                   ############"
        turbine::trace_impl "########   ALIGNMENT QC TEST   FOR SAMPLE" ${v:alias:sampleName} "             ###############"
        set a:t:206 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:205} 0 ]
        set a:t:209 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:208} 0 ]
        set a:t:212 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:211} 0 ]
        turbine::trace_impl "#############   WRAP UP the align_dedup stage   ############"
        set v:t:538 "#######   MERGE BAMS BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:537 "${v:t:538}      ######"
        turbine::trace_impl ${v:t:537}
        set v:t:568 "${v:alias:sampleName}.*.recalibrated.bam"
        turbine::store_string ${t:568} ${v:t:568}
        f:find_files ${u:chr_bamListfile} ${t:563} ${t:568} -100 "HARD" "RANK"
        set v:t:589 "#######   MERGE VCFs BLOCK STARTS HERE  FOR             ${v:alias:sampleName}"
        set v:t:588 "${v:t:589}       ######"
        turbine::trace_impl ${v:t:588}
        set v:t:597 "${v:alias:sampleName}.*.vcf"
        turbine::store_string ${t:597} ${v:t:597}
        f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:597} -100 "HARD" "RANK"
        f:sed ${t:601} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        set v:t:336 "####   Realign-Vcall script for SAMPLE ${v:alias:sampleName}"
        set v:t:397 "#######   REALIGN-RECALIBRATION BLOCK STARTS HERE   ${v:alias:sampleName}"
        set v:t:512 "#############    GATK VARIANT CALLING   FOR SAMPLE ${v:alias:sampleName}"
        set v:t:335 "${v:t:336} chr="
        set v:t:511 "${v:t:512} : "
        turbine::rule [ list ${t:37} ] [ list __entry-if1 ${t:18} ${t:203} ${t:24} ${t:25} ${t:29} ${t:37} ${t:38} ${t:446} ${t:576} ${t:577} ${t:583} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:indices} ] [ list __entry-foreach-wait2 ${t:203} ${t:25} ${t:324} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:alias:sampleName} ${v:t:335} ${v:t:397} ${v:t:511} ${u:dedupsortedbam} ${u:indices} ]
        turbine::rule [ list ${t:11} ${t:13} ${t:15} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:17} ] "__entry-copy_in_filename ${t:17} {${u:qcfile}}"
        turbine::rule [ list ${t:195} ] "__entry-call_foreign-trace ${t:195}"
        turbine::rule [ list ${t:200} ] "__entry-call_foreign-trace-1 ${t:200}"
        turbine::rule [ list ${a:t:206} ] "__entry-call_foreign-split {${a:t:206}} ${t:205}"
        turbine::rule [ list ${a:t:209} ] "__entry-call_foreign-split-1 {${a:t:209}} ${t:208}"
        turbine::rule [ list ${a:t:212} ] "__entry-call_foreign-split-2 {${a:t:212}} ${t:211}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:195} ${t:200} ${t:218} ${t:223} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-3 {${a:tot_mapped}} ${t:218}"
        turbine::rule [ list ${t:18} ] [ list __entry-optmerged-4 ${u:VarcallDir} ${t:18} ${t:203} ${t:29} ${t:324} ${t:541} ${t:563} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:flagstats} ${u:outbam} ${u:rawvariant} ${u:stat} ]
        turbine::rule [ list ${t:25} ] [ list __entry-optmerged-5 ${t:24} ${t:25} ${t:541} ${t:576} ${t:583} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:outbam} ]
        turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
        turbine::read_refcount_decr ${t:597} 1
        turbine::read_refcount_decr ${u:VarcallDir} 1
        turbine::read_refcount_decr ${t:563} 1
        turbine::read_refcount_decr ${t:568} 1
        turbine::file_read_refcount_decr ${t:601} 1
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:200} 1
    turbine::read_refcount_decr ${t:453} 1
    turbine::read_refcount_decr ${t:583} 1
    turbine::read_refcount_decr ${t:203} 1
    turbine::read_refcount_decr ${t:25} 1
    turbine::read_refcount_decr ${t:577} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:37} 1
    turbine::read_refcount_decr ${t:446} 1
    turbine::read_refcount_decr ${t:223} 1
    turbine::read_refcount_decr ${t:38} 1
    turbine::read_refcount_decr ${t:410} 1
    turbine::read_refcount_decr ${t:17} 1
    turbine::read_refcount_decr ${t:488} 1
    turbine::read_refcount_decr ${t:576} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:195} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:448} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-if1 { t:18 t:203 t:24 t:25 t:29 t:37 t:38 t:446 t:576 t:577 t:583 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:37 VALUE_OF [boolean:__t:37] VCcallingPipeline.swift:__entry():53:35
    set v:__t:37 [ turbine::retrieve_integer ${t:37} CACHED 1 ]
    if { ${v:__t:37} } {
        # Var: string c:s_u OPT_TEMPORARY
        global c:s_u
        # Var: string c:s_compressio OPT_TEMPORARY
        global c:s_compressio
        # Var: file u:dedupsam VCcallingPipeline.swift:__entry():56:63
        # Var: string t:48 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():57:17
        # Var: file u:dedupbam VCcallingPipeline.swift:__entry():57:66
        # Var: string t:53 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():58:23
        # Var: string t:55 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():58:53
        # Var: string t:57 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():58:71
        # Var: string t:62 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():59:24
        # Var: $void v:t:41 VALUE_OF [void:__t:41]
        lassign [ adlb::multicreate [ list string 1 1 71 ] [ list string 1 1 73 ] [ list string 1 1 74 ] [ list string 1 1 75 ] [ list string 1 1 76 ] ] t:48 t:53 t:55 t:57 t:62
        turbine::c::log "allocated t:48=<${t:48}> t:53=<${t:53}> t:55=<${t:55}> t:57=<${t:57}> t:62=<${t:62}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 70 ] [ list file 1 1 72 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::trace_impl "##CASE1: dedup tool is ## SAMBLASTER ##. We use a single command for align-deduplication ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:53} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:55} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:57} string
        f:bwa_mem ${u:alignedsam} ${t:53} ${u:read1} ${u:read2} ${t:55} ${t:57} ${t:583} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:62} string
        f:samtools_view ${u:dedupbam} ${t:203} ${u:dedupsam} ${t:583} ${c:s_u} -100 "HARD" "RANK"
        f:novosort ${u:dedupsortedbam} ${t:576} ${t:48} ${t:25} ${t:583} ${c:s_compressio} -100 "HARD" "RANK"
        turbine::rule [ list ${t:25} ] [ list __entry-async_op-strcat ${t:24} ${t:25} ${t:62} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsam} ]
        turbine::rule [ list ${t:18} ] [ list __entry-async_op-strcat-1 ${t:18} ${t:48} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::file_read_refcount_decr ${u:dedupsam} 1
        turbine::read_refcount_decr ${t:48} 1
        turbine::read_refcount_decr ${t:55} 1
        turbine::file_read_refcount_decr ${u:dedupbam} 1
        turbine::read_refcount_decr ${t:57} 1
        turbine::read_refcount_decr ${t:53} 1
    } else {
        # Var: string t:82 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():66:19
        # Var: file u:alignedbam VCcallingPipeline.swift:__entry():66:67
        lassign [ adlb::multicreate [ list string 1 1 77 ] ] t:82
        turbine::c::log "allocated t:82=<${t:82}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 78 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:576} 1
        turbine::read_refcount_incr ${t:38} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:446} 1
        turbine::read_refcount_incr ${t:577} 1
        turbine::read_refcount_incr ${t:203} 1
        turbine::read_refcount_incr ${t:583} 1
        turbine::read_refcount_incr ${t:29} 1
        turbine::read_refcount_incr ${t:18} 1
        turbine::rule [ list ${t:18} ] [ list __entry-async_op-strcat-2 ${t:18} ${t:82} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:38} ] [ list __entry-async_op-eq_string ${t:18} ${t:203} ${t:24} ${t:25} ${t:29} ${t:38} ${t:446} ${t:576} ${t:577} ${t:583} ${t:82} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:29} 1
    turbine::read_refcount_decr ${t:583} 1
    turbine::read_refcount_decr ${t:203} 1
    turbine::read_refcount_decr ${t:25} 1
    turbine::read_refcount_decr ${t:577} 1
    turbine::read_refcount_decr ${t:446} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:38} 1
    turbine::read_refcount_decr ${t:576} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-async_op-strcat { t:24 t:25 t:62 v:alias:sampleName u:alignedsam u:dedupsam } {
    # Var: $string v:t:25:2 VALUE_OF [string:__t:25]
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    set v:t:25:2 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:t:43 "${v:t:25:2}/align/${v:alias:sampleName}.wdups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:43}
    turbine::rule [ list ${t:24} ${t:62} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster-app-leaf1 ${t:24} ${t:62} ${v:t:43} ${u:alignedsam} ${u:dedupsam} ]
}


proc samblaster-app-leaf1 { t:24 t:62 v:t:43 u:alignedsam u:dedupsam } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():21:43
    set v:samblasterdir [ turbine::retrieve_string ${t:62} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:43} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:t:43} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:t:43} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::decr_local_file_refcount v:output
}


proc __entry-async_op-strcat-1 { t:18 t:48 v:alias:sampleName u:dedupbam } {
    # Var: $string v:t:18:3 VALUE_OF [string:__t:18]
    # Var: $string v:t:48 VALUE_OF [string:__t:48]
    set v:t:18:3 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:48 "${v:t:18:3}/align/${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:48} ${v:t:48}
    turbine::set_filename_val ${u:dedupbam} ${v:t:48}
}


proc __entry-async_op-strcat-2 { t:18 t:82 v:alias:sampleName u:alignedbam } {
    # Var: $string v:t:18:4 VALUE_OF [string:__t:18]
    # Var: $string v:t:82 VALUE_OF [string:__t:82]
    set v:t:18:4 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:82 "${v:t:18:4}/align/${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:82} ${v:t:82}
    turbine::set_filename_val ${u:alignedbam} ${v:t:82}
}


proc __entry-async_op-eq_string { t:18 t:203 t:24 t:25 t:29 t:38 t:446 t:576 t:577 t:583 t:82 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:38:1 VALUE_OF [string:__t:38]
    # Var: $boolean v:t:87 VALUE_OF [boolean:__t:87]
    set v:t:38:1 [ turbine::retrieve_string ${t:38} CACHED 1 ]
    set v:t:87 [ string equal ${v:t:38:1} "PICARD" ]
    if { ${v:t:87} } {
        # Var: string c:s_-5 OPT_TEMPORARY
        global c:s_-5
        # Var: string c:s_u OPT_TEMPORARY
        global c:s_u
        # Var: file u:alignedsortedbam VCcallingPipeline.swift:__entry():69:75
        # Var: file u:metricsfile VCcallingPipeline.swift:__entry():70:70
        # Var: string t:103 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:24
        # Var: string t:105 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:54
        # Var: string t:107 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():71:72
        # Var: string t:132 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():75:56
        # Var: $void v:t:91 VALUE_OF [void:__t:91]
        lassign [ adlb::multicreate [ list string 1 1 81 ] [ list string 1 1 82 ] [ list string 1 1 83 ] [ list string 1 1 84 ] ] t:103 t:105 t:107 t:132
        turbine::c::log "allocated t:103=<${t:103}> t:105=<${t:105}> t:107=<${t:107}> t:132=<${t:132}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 79 ] [ list file 0 1 80 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${t:446} 1
        turbine::read_refcount_incr ${t:25} 1
        turbine::read_refcount_incr ${t:29} 1
        turbine::read_refcount_incr ${t:18} 1
        turbine::trace_impl "##CASE 2: dedup tool is ## PICARD ##. One command for align, one for sort, one for dedup ##"
        turbine::container_reference ${u:vars} "BWADIR" ${t:103} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:105} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:107} string
        f:bwa_mem ${u:alignedsam} ${t:103} ${u:read1} ${u:read2} ${t:105} ${t:107} ${t:583} ${u:rgheader} -100 "HARD" "RANK"
        f:samtools_view ${u:alignedbam} ${t:203} ${u:alignedsam} ${t:583} ${c:s_u} -100 "HARD" "RANK"
        f:novosort ${u:alignedsortedbam} ${t:576} ${t:82} ${t:25} ${t:583} ${c:s_-5} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "PICARDDIR" ${t:132} string
        turbine::rule [ list ${t:18} ] [ list __entry-optmerged ${t:132} ${t:18} ${t:25} ${t:29} ${t:446} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ]
        turbine::read_refcount_decr ${t:105} 1
        turbine::read_refcount_decr ${t:103} 1
        turbine::read_refcount_decr ${t:107} 1
    } else {
        # Var: string c:s_markDuplic OPT_TEMPORARY
        global c:s_markDuplic
        # Var: string t:139 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():80:7
        # Var: $void v:t:136 VALUE_OF [void:__t:136]
        lassign [ adlb::multicreate [ list string 1 1 85 ] ] t:139
        turbine::c::log "allocated t:139=<${t:139}>"
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:24} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:577} 1
        turbine::read_refcount_incr ${t:203} 1
        turbine::read_refcount_incr ${t:583} 1
        turbine::trace_impl "##CASE DEFAULT: dedup tool is ## NOVOSORT ##. We use one command for dup-sort ##"
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:139} string
        f:novosort ${u:dedupsortedbam} ${t:576} ${t:82} ${t:25} ${t:583} ${c:s_markDuplic} -100 "HARD" "RANK"
        turbine::rule [ list ${t:139} ] [ list __entry-async_op-eq_string-1 ${t:139} ${t:203} ${t:24} ${t:577} ${t:583} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:29} 1
    turbine::read_refcount_decr ${t:583} 1
    turbine::read_refcount_decr ${t:203} 1
    turbine::read_refcount_decr ${t:25} 1
    turbine::read_refcount_decr ${t:577} 1
    turbine::read_refcount_decr ${t:446} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:576} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:82} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-optmerged { t:132 t:18 t:25 t:29 t:446 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:t:18:5 VALUE_OF [string:__t:18]
    # Var: $string v:t:93 VALUE_OF [string:__t:93]
    # Var: $string v:t:98 VALUE_OF [string:__t:98]
    set v:t:18:5 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:93 "${v:t:18:5}/align/${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:98 "${v:t:18:5}/align/${v:alias:sampleName}.picard.metrics"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:93}
    turbine::set_filename_val ${u:metricsfile} ${v:t:98}
    turbine::rule [ list ${t:132} ${t:25} ${t:29} ${t:446} [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list picard-app-leaf1 ${t:132} ${t:25} ${t:29} ${t:446} ${v:t:93} ${v:t:98} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ]
}


proc picard-app-leaf1 { t:132 t:25 t:29 t:446 v:t:93 v:t:98 u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():37:145
    set v:javadir [ turbine::retrieve_string ${t:446} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:132} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:98} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:93} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:98} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:93} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:98} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true MAX_RECORDS_IN_RAM=null CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-async_op-eq_string-1 { t:139 t:203 t:24 t:577 t:583 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:139 VALUE_OF [string:__t:139]
    # Var: $boolean v:t:138 VALUE_OF [boolean:__t:138]
    set v:t:139 [ turbine::retrieve_string ${t:139} CACHED 1 ]
    set v:t:138 [ string equal ${v:t:139} "BWAMEM" ]
    if { ${v:t:138} } {
        # Var: string c:s_u OPT_TEMPORARY
        global c:s_u
        # Var: string t:142 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():81:25
        # Var: string t:144 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():81:55
        # Var: string t:146 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():81:73
        lassign [ adlb::multicreate [ list string 1 1 86 ] [ list string 1 1 87 ] [ list string 1 1 88 ] ] t:142 t:144 t:146
        turbine::c::log "allocated t:142=<${t:142}> t:144=<${t:144}> t:146=<${t:146}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWADIR" ${t:142} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:144} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:146} string
        f:bwa_mem ${u:alignedsam} ${t:142} ${u:read1} ${u:read2} ${t:144} ${t:146} ${t:583} ${u:rgheader} -100 "HARD" "RANK"
        f:samtools_view ${u:alignedbam} ${t:203} ${u:alignedsam} ${t:583} ${c:s_u} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:144} 1
        turbine::read_refcount_decr ${t:142} 1
        turbine::read_refcount_decr ${t:146} 1
    } else {
        # Var: string c:s_u OPT_TEMPORARY
        global c:s_u
        # Var: string t:162 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():84:87
        # Var: string t:164 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():84:111
        lassign [ adlb::multicreate [ list string 1 1 89 ] [ list string 1 1 90 ] ] t:162 t:164
        turbine::c::log "allocated t:162=<${t:162}> t:164=<${t:164}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:24} 1
        turbine::read_refcount_incr ${t:577} 1
        turbine::read_refcount_incr ${t:583} 1
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:162} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:164} string
        f:samtools_view ${u:alignedbam} ${t:203} ${u:alignedsam} ${t:583} ${c:s_u} -100 "HARD" "RANK"
        turbine::rule [ list ${t:162} ${t:164} ${t:24} ${t:577} ${t:583} ${u:rgheader} ] [ list __entry-async_op-strcat-3 ${t:162} ${t:164} ${t:24} ${t:577} ${t:583} ${v:alias:read1} ${v:alias:read2} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:583} 1
    turbine::read_refcount_decr ${t:203} 1
    turbine::read_refcount_decr ${t:577} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-async_op-strcat-3 { t:162 t:164 t:24 t:577 t:583 v:alias:read1 v:alias:read2 u:alignedsam u:rgheader } {
    # Var: $string v:t:577:1 VALUE_OF [string:__t:577]
    # Var: $string v:t:157 VALUE_OF [string:__t:157]
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:t:577:1 [ turbine::retrieve_string ${t:577} CACHED 1 ]
    set v:t:157 "${v:t:577:1}/novoalign"
    set v:PBSCORES [ turbine::retrieve_integer ${t:583} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:162} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:t:157 "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:t:157} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::decr_local_file_refcount v:output:1
    turbine::read_refcount_decr ${t:164} 1
}


proc __entry-foreach-wait2 { t:203 t:25 t:324 t:410 t:446 t:448 t:453 t:488 t:583 v:alias:sampleName v:t:335 v:t:397 v:t:511 u:dedupsortedbam u:indices } {
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:583} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:488} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:25} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:324} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:203} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:453} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:448} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:446} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:203} ${t:25} ${t:324} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:alias:sampleName} ${v:t:335} ${v:t:397} ${v:t:511} ${u:dedupsortedbam} ${u:indices} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:410} 1
}


proc __entry-foreach2:outer { t:203 t:25 t:324 t:410 t:446 t:448 t:453 t:488 t:583 v:alias:sampleName v:t:335 v:t:397 v:t:511 u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:203} ${t:25} ${t:324} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:alias:sampleName} ${v:t:335} ${v:t:397} ${v:t:511} ${u:dedupsortedbam} ${u:indices} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:203} ${t:25} ${t:324} ${t:410} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:alias:sampleName} ${v:t:335} ${v:t:397} ${v:t:511} ${u:dedupsortedbam} ${u:indices} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:203 t:25 t:324 t:410 t:446 t:448 t:453 t:488 t:583 v:alias:sampleName v:t:335 v:t:397 v:t:511 u:dedupsortedbam u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: string t:340 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():142:26
        # Var: file u:chrdedupsortedbam VCcallingPipeline.swift:__entry():142:97
        # Var: string t:347 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():143:21
        # Var: file u:realignedbam VCcallingPipeline.swift:__entry():143:93
        # Var: string t:354 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():144:24
        # Var: file u:recalibratedbam VCcallingPipeline.swift:__entry():144:96
        # Var: string t:361 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():145:20
        # Var: file u:gvcfvariant VCcallingPipeline.swift:__entry():145:92
        # Var: file u:recalfiles VCcallingPipeline.swift:__entry():147:69
        # Var: file u:realfiles VCcallingPipeline.swift:__entry():148:68
        # Var: string t:380 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():149:19
        # Var: file u:intervals VCcallingPipeline.swift:__entry():149:91
        # Var: string t:387 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():150:21
        # Var: file u:recalreport VCcallingPipeline.swift:__entry():150:93
        # Var: int u:ploidy VCcallingPipeline.swift:__entry():153:2
        # Var: string t:407 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():155:103
        # Var: string t:417 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():159:79
        # Var: string[int] u:recalparmsindels VCcallingPipeline.swift:__entry():160:2
        # Var: file t:422 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():160:53
        # Var: string[int] u:realparms VCcallingPipeline.swift:__entry():163:2
        # Var: file t:440 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():163:46
        # Var: $string v:t:334 VALUE_OF [string:__t:334]
        # Var: $string v:t:333 VALUE_OF [string:__t:333]
        # Var: $void v:t:332 VALUE_OF [void:__t:332]
        # Var: $string v:t:396 VALUE_OF [string:__t:396]
        # Var: $string v:t:395 VALUE_OF [string:__t:395]
        # Var: $void v:t:394 VALUE_OF [void:__t:394]
        # Var: $boolean v:t:400 VALUE_OF [boolean:__t:400]
        # Var: $string v:t:407 VALUE_OF [string:__t:407]
        # Var: $string v:t:417 VALUE_OF [string:__t:417]
        # Var: $string v:t:510 VALUE_OF [string:__t:510]
        # Var: $string v:t:509 VALUE_OF [string:__t:509]
        # Var: $void v:t:508 VALUE_OF [void:__t:508]
        lassign [ adlb::multicreate [ list string 1 1 91 ] [ list string 1 1 93 ] [ list string 1 1 95 ] [ list string 1 1 97 ] [ list string 1 1 101 ] [ list string 1 1 103 ] [ list integer 1 1 105 ] [ list string 1 1 106 ] [ list string 1 1 107 ] [ list container integer string 1 1 108 ] [ list container integer string 1 1 110 ] ] t:340 t:347 t:354 t:361 t:380 t:387 u:ploidy t:407 t:417 u:recalparmsindels u:realparms
        turbine::c::log "allocated t:340=<${t:340}> t:347=<${t:347}> t:354=<${t:354}> t:361=<${t:361}> t:380=<${t:380}>"
        turbine::c::log "allocated t:387=<${t:387}> u:ploidy=<${u:ploidy}> t:407=<${t:407}> t:417=<${t:417}> u:recalparmsindels=<${u:recalparmsindels}>"
        turbine::c::log "allocated u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 92 ] [ list file 1 1 94 ] [ list file 1 1 96 ] [ list file 0 1 98 ] [ list file 1 1 99 ] [ list file 1 1 100 ] [ list file 1 1 102 ] [ list file 1 1 104 ] [ list file 1 1 109 ] [ list file 1 1 111 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:gvcfvariant u:recalfiles u:realfiles u:intervals u:recalreport t:422 t:440
        set v:t:334 "${v:t:335}${v:chr}"
        set v:t:333 "${v:t:334}                             #######"
        turbine::trace_impl ${v:t:333}
        set v:t:396 "${v:t:397}${v:chr}"
        set v:t:395 "${v:t:396}        ######"
        turbine::trace_impl ${v:t:395}
        set v:t:400 [ string equal ${v:chr} "M" ]
        set v:t:407 "${v:chr}"
        turbine::store_string ${t:407} ${v:t:407}
        f:samtools_view ${u:chrdedupsortedbam} ${t:203} ${u:dedupsortedbam} ${t:583} ${t:407} -100 "HARD" "RANK"
        set v:t:417 "*${v:chr}.vcf"
        turbine::store_string ${t:417} ${v:t:417}
        f:find_files ${u:recalfiles} ${t:410} ${t:417} -100 "HARD" "RANK"
        f:sed ${t:422} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:410} ${t:417} -100 "HARD" "RANK"
        f:sed ${t:440} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        set v:t:510 "${v:t:511}${v:chr}"
        set v:t:509 "${v:t:510}   ###########"
        turbine::trace_impl ${v:t:509}
        if { ${v:t:400} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        turbine::rule [ list [ turbine::get_file_td ${t:422} ] ] "__entry-call_foreign-read {${t:422}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:440} ] ] [ list __entry-call_foreign-read-1 ${t:340} ${t:347} ${t:354} ${t:361} ${t:380} ${t:387} ${t:440} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:chr} ${u:chrdedupsortedbam} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::rule [ list ${t:324} ] [ list __entry-optmerged-1 ${t:203} ${t:324} ${t:340} ${t:347} ${t:354} ${t:361} ${t:380} ${t:387} ${v:alias:sampleName} ${v:chr} ${u:chrdedupsortedbam} ${u:gvcfvariant} ${u:intervals} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
        turbine::rule [ list ${t:25} ] [ list __entry-optmerged-2 ${t:25} ${v:alias:sampleName} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::read_refcount_decr ${t:417} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::read_refcount_decr ${t:407} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:indices} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read { t:422 u:recalparmsindels } {
    # Var: $file v:t:422 VALUE_OF [file:__t:422]
    # Var: $string v:t:421 VALUE_OF [string:__t:421]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:420 VALUE_OF [string:__t:420]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:422 [ turbine::retrieve_file ${t:422} CACHED 1 ]
    set v:t:421 [ turbine::file_read_local ${v:t:422} ]
    set v:n [ string length ${v:t:421} ]
    set v:t:420 [ turbine::replace_all_impl ${v:t:421} "\n" "" 0 ${v:n} ]
    set v:recalparmsindels [ turbine::split_impl ${v:t:420} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-1 { t:340 t:347 t:354 t:361 t:380 t:387 t:440 t:446 t:448 t:453 t:488 t:583 v:chr u:chrdedupsortedbam u:gvcfvariant u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:t:440 VALUE_OF [file:__t:440]
    # Var: $string v:t:439 VALUE_OF [string:__t:439]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:438 VALUE_OF [string:__t:438]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:440 [ turbine::retrieve_file ${t:440} CACHED 1 ]
    set v:t:439 [ turbine::file_read_local ${v:t:440} ]
    set v:n:1 [ string length ${v:t:439} ]
    set v:t:438 [ turbine::replace_all_impl ${v:t:439} "\n" "" 0 ${v:n:1} ]
    set v:realparms [ turbine::split_impl ${v:t:438} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    turbine::rule [ list ${t:340} ${t:380} ${t:446} ${t:448} ${t:453} ${t:583} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list RealignerTargetCreator-app-leaf1 ${t:340} ${t:347} ${t:354} ${t:361} ${t:380} ${t:387} ${t:446} ${t:448} ${t:453} ${t:488} ${t:583} ${v:chr} ${u:chrdedupsortedbam} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc RealignerTargetCreator-app-leaf1 { t:340 t:347 t:354 t:361 t:380 t:387 t:446 t:448 t:453 t:488 t:583 v:chr u:chrdedupsortedbam u:gvcfvariant u:intervals u:ploidy u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:__filename:inputFile:2 RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():12:121
    set v:javadir:1 [ turbine::retrieve_string ${t:446} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:448} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:453} CACHED 1 ]
    set v:__filename:inputFile:2 [ turbine::retrieve_string ${t:340} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:583} CACHED 1 ]
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${t:380} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile:2} {*}${v:known} "-nt" ${v:thr} "-o" ${v:__filename:outputfile:1} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile:2} {*}${v:known} "-nt" ${v:thr} "-o" ${v:__filename:outputfile:1}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    turbine::rule [ list ${t:347} ] [ list IndelRealigner-app-leaf1 ${t:347} ${t:354} ${t:361} ${t:387} ${t:488} ${v:__filename:inputFile:2} ${v:__filename:outputfile:1} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:thr} ${u:chrdedupsortedbam} ${u:gvcfvariant} ${u:intervals} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:347 t:354 t:361 t:387 t:488 v:__filename:inputFile:2 v:__filename:outputfile:1 v:chr v:gatkdir v:javadir:1 v:known v:reference v:thr u:chrdedupsortedbam u:gvcfvariant u:intervals u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:__filename:outputfile:2 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():17:133
    set v:__filename:outputfile:2 [ turbine::retrieve_string ${t:347} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:__filename:outputfile:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile:2} {*}${v:known} "--targetIntervals" ${v:__filename:outputfile:1} "-o" ${v:__filename:outputfile:2} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile:2} {*}${v:known} "--targetIntervals" ${v:__filename:outputfile:1} "-o" ${v:__filename:outputfile:2}
    turbine::store_file ${u:realignedbam} v:outputfile:2 0
    turbine::rule [ list ${t:387} ${t:488} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:354} ${t:361} ${t:387} ${t:488} ${v:__filename:outputfile:2} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:thr} ${u:gvcfvariant} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:2
}


proc BaseRecalibrator-app-leaf1 { t:354 t:361 t:387 t:488 v:__filename:outputfile:2 v:chr v:gatkdir v:javadir:1 v:reference v:thr u:gvcfvariant u:ploidy u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $string v:__filename:outputfile:3 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():22:143
    set v:dbsnp [ turbine::retrieve_string ${t:488} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:__filename:outputfile:3 [ turbine::retrieve_string ${t:387} CACHED 1 ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:__filename:outputfile:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:outputfile:2} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:__filename:outputfile:3} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:outputfile:2} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:__filename:outputfile:3}
    turbine::store_file ${u:recalreport} v:outputfile:3 0
    turbine::rule [ list ${t:354} ] [ list PrintReads-app-leaf1 ${t:354} ${t:361} ${v:__filename:outputfile:2} ${v:__filename:outputfile:3} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:thr} ${u:gvcfvariant} ${u:ploidy} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { t:354 t:361 v:__filename:outputfile:2 v:__filename:outputfile:3 v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:thr u:gvcfvariant u:ploidy u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $string v:__filename:outputfile:4 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():27:129
    set v:__filename:outputfile:4 [ turbine::retrieve_string ${t:354} CACHED 1 ]
    set v:inputFile:5 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:__filename:outputfile:4} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:outputfile:2} "-BQSR" ${v:__filename:outputfile:3} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:4} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:outputfile:2} "-BQSR" ${v:__filename:outputfile:3} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:4}
    turbine::store_file ${u:recalibratedbam} v:outputfile:4 0
    turbine::rule [ list ${t:361} ] [ list HaplotypeCaller-app-leaf1 ${t:361} ${v:__filename:outputfile:4} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:thr} ${u:gvcfvariant} ${u:ploidy} ${u:recalibratedbam} ]
    turbine::decr_local_file_refcount v:outputfile:4
}


proc HaplotypeCaller-app-leaf1 { t:361 v:__filename:outputfile:4 v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:thr u:gvcfvariant u:ploidy u:recalibratedbam } {
    # Var: $string v:__filename:outputfile:5 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:inputFile:6 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():32:455
    set v:__filename:outputfile:5 [ turbine::retrieve_string ${t:361} CACHED 1 ]
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:inputFile:6 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:__filename:outputfile:5} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:__filename:outputfile:4} "--dbsnp" ${v:dbsnp} "-o" ${v:__filename:outputfile:5} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:__filename:outputfile:4} "--dbsnp" ${v:dbsnp} "-o" ${v:__filename:outputfile:5} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-optmerged-1 { t:203 t:324 t:340 t:347 t:354 t:361 t:380 t:387 v:alias:sampleName v:chr u:chrdedupsortedbam u:gvcfvariant u:intervals u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $string v:t:324:5 VALUE_OF [string:__t:324]
    # Var: $string v:t:340 VALUE_OF [string:__t:340]
    # Var: $string v:t:347 VALUE_OF [string:__t:347]
    # Var: $string v:t:354 VALUE_OF [string:__t:354]
    # Var: $string v:t:361 VALUE_OF [string:__t:361]
    # Var: $string v:t:380 VALUE_OF [string:__t:380]
    # Var: $string v:t:387 VALUE_OF [string:__t:387]
    set v:t:324:5 [ turbine::retrieve_string ${t:324} CACHED 1 ]
    set v:t:340 "${v:t:324:5}/realign/${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
    turbine::store_string ${t:340} ${v:t:340}
    set v:t:347 "${v:t:324:5}/realign/${v:alias:sampleName}.${v:chr}.realigned.bam"
    turbine::store_string ${t:347} ${v:t:347}
    set v:t:354 "${v:t:324:5}/realign/${v:alias:sampleName}.${v:chr}.recalibrated.bam"
    turbine::store_string ${t:354} ${v:t:354}
    set v:t:361 "${v:t:324:5}/variant/${v:alias:sampleName}.${v:chr}.raw.g.vcf"
    turbine::store_string ${t:361} ${v:t:361}
    set v:t:380 "${v:t:324:5}/realign/${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
    turbine::store_string ${t:380} ${v:t:380}
    set v:t:387 "${v:t:324:5}/realign/${v:alias:sampleName}.${v:chr}.recal_report.grp"
    turbine::store_string ${t:387} ${v:t:387}
    turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:340}
    turbine::set_filename_val ${u:realignedbam} ${v:t:347}
    turbine::set_filename_val ${u:recalibratedbam} ${v:t:354}
    turbine::set_filename_val ${u:gvcfvariant} ${v:t:361}
    turbine::set_filename_val ${u:intervals} ${v:t:380}
    turbine::set_filename_val ${u:recalreport} ${v:t:387}
    turbine::rule [ list ${t:203} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list samtools_index-app-leaf1 ${t:203} ${v:t:340} ${u:chrdedupsortedbam} ]
}


proc samtools_index-app-leaf1 { t:203 v:t:340 u:chrdedupsortedbam } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${t:203} CACHED 1 ]
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:t:340} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:t:340}
}


proc __entry-optmerged-2 { t:25 v:alias:sampleName v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:25:3 VALUE_OF [string:__t:25]
    # Var: $string v:t:368 VALUE_OF [string:__t:368]
    # Var: $string v:t:374 VALUE_OF [string:__t:374]
    set v:t:25:3 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:t:368 "${v:t:25:3}.${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    set v:t:374 "${v:t:25:3}.${v:alias:sampleName}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:368}
    turbine::set_filename_val ${u:realfiles} ${v:t:374}
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:17 u:qcfile } {
    # Var: $string v:t:17:1 VALUE_OF [string:__t:17]
    set v:t:17:1 [ turbine::retrieve_string ${t:17} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:17:1}
}


proc __entry-call_foreign-trace { t:195 } {
    # Var: $string v:t:195:1 VALUE_OF [string:__t:195]
    # Var: $void v:t:193 VALUE_OF [void:__t:193]
    set v:t:195:1 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    turbine::trace_impl "########   QC rule1: duplication cutoff <= " ${v:t:195:1} "          ###############"
}


proc __entry-call_foreign-trace-1 { t:200 } {
    # Var: $string v:t:200 VALUE_OF [string:__t:200]
    # Var: $void v:t:198 VALUE_OF [void:__t:198]
    set v:t:200 [ turbine::retrieve_string ${t:200} CACHED 1 ]
    turbine::trace_impl "########   QC rule2: mapped_reads cutoff >= " ${v:t:200} "           ###############"
}


proc __entry-call_foreign-split { a:t:206 t:205 } {
    # Var: $string v:alias:t:206 VALUE_OF [string:__alias:t:206]
    # Var: $string$[int] v:t:205 VALUE_OF [string[int]:__t:205]
    set v:alias:t:206 [ turbine::retrieve_string ${a:t:206} CACHED 1 ]
    set v:t:205 [ turbine::split_impl ${v:alias:t:206} " " ]
    turbine::build_rec ${t:205} ${v:t:205} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:209 t:208 } {
    # Var: $string v:alias:t:209 VALUE_OF [string:__alias:t:209]
    # Var: $string$[int] v:t:208 VALUE_OF [string[int]:__t:208]
    set v:alias:t:209 [ turbine::retrieve_string ${a:t:209} CACHED 1 ]
    set v:t:208 [ turbine::split_impl ${v:alias:t:209} " " ]
    turbine::build_rec ${t:208} ${v:t:208} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:212 t:211 } {
    # Var: $string v:alias:t:212 VALUE_OF [string:__alias:t:212]
    # Var: $string$[int] v:t:211 VALUE_OF [string[int]:__t:211]
    set v:alias:t:212 [ turbine::retrieve_string ${a:t:212} CACHED 1 ]
    set v:t:211 [ turbine::split_impl ${v:alias:t:212} " " ]
    turbine::build_rec ${t:211} ${v:t:211} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:195 t:200 t:218 t:223 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:217 VALUE_OF [float:__t:217]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:217 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:218} ] "__entry-async_op-div_float ${t:218} ${v:t:217} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:223} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:195} ${t:200} ${t:223} ${v:alias:sampleName} ${v:t:217} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:218 v:t:217 u:perc_mapped } {
    # Var: $float v:t:218:1 VALUE_OF [float:__t:218]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:218:1 [ turbine::retrieve_float ${t:218} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:218:1} / ${v:t:217} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:195 t:200 t:223 v:alias:sampleName v:t:217 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:215 VALUE_OF [float:__t:215]
    # Var: $float v:t:214 VALUE_OF [float:__t:214]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:223:1 VALUE_OF [float:__t:223]
    # Var: $boolean v:t:222 VALUE_OF [boolean:__t:222]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:215 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:214 [ expr { ${v:t:215} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:214} / ${v:t:217} } ]
    set v:t:223:1 [ turbine::retrieve_float ${t:223} CACHED 1 ]
    set v:t:222 [ expr { ${v:perc_dup} < ${v:t:223:1} } ]
    if { ${v:t:222} } {
        # Var: $string v:t:231 VALUE_OF [string:__t:231]
        # Var: $string v:t:230 VALUE_OF [string:__t:230]
        # Var: $string v:t:229 VALUE_OF [string:__t:229]
        # Var: $string v:t:228 VALUE_OF [string:__t:228]
        turbine::read_refcount_incr ${t:195} 2
        turbine::file_read_refcount_incr ${u:qcfile} 1
        set v:t:231 "#####  ${v:alias:sampleName}"
        set v:t:230 "${v:t:231} passed first filter percent_duplicates with value"
        set v:t:229 "${v:t:230}${v:perc_dup}"
        set v:t:228 "${v:t:229}, maximum cutoff is "
        turbine::rule [ list ${t:200} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-2 ${t:195} ${t:200} ${v:alias:sampleName} ${v:perc_dup} ${v:t:231} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${t:195} ] [ list __entry-async_op-strcat-6 ${t:195} ${v:t:228} ]
    } else {
        # Var: string t:306 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():119:218
        # Var: $string v:t:300 VALUE_OF [string:__t:300]
        # Var: $string v:t:299 VALUE_OF [string:__t:299]
        # Var: $string v:t:313 VALUE_OF [string:__t:313]
        # Var: $string v:t:298 VALUE_OF [string:__t:298]
        # Var: $string v:t:297 VALUE_OF [string:__t:297]
        # Var: $string v:t:312 VALUE_OF [string:__t:312]
        # Var: $string v:t:311 VALUE_OF [string:__t:311]
        lassign [ adlb::multicreate [ list string 1 1 114 ] ] t:306
        turbine::c::log "allocated t:306=<${t:306}>"
        set v:t:300 "#####  ${v:alias:sampleName}"
        set v:t:299 "${v:t:300} DID NOT pass first filter percent_duplicates with value"
        set v:t:313 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 not ok: percent_duplication="
        f:echo ${u:qcfile} ${t:306} -100 "HARD" "RANK"
        set v:t:298 "${v:t:299}${v:perc_dup}"
        set v:t:297 "${v:t:298}, maximum cutoff is "
        set v:t:312 "${v:t:313}${v:perc_dup}"
        set v:t:311 "${v:t:312}<? duplication_cutoff="
        turbine::rule [ list ${t:195} ${t:200} ${u:perc_mapped} ] [ list __entry-optmerged-3 ${t:195} ${t:200} ${t:306} ${v:t:297} ${v:t:311} ${u:perc_mapped} ]
        turbine::read_refcount_decr ${t:306} 1
    }
    turbine::read_refcount_decr ${t:200} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${t:195} 1
}


proc __entry-async_op-parse_float-2 { t:195 t:200 v:alias:sampleName v:perc_dup v:t:231 u:perc_mapped u:qcfile } {
    # Var: $string v:t:200:1 VALUE_OF [string:__t:200]
    # Var: $float v:t:238 VALUE_OF [float:__t:238]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:237 VALUE_OF [boolean:__t:237]
    set v:t:200:1 [ turbine::retrieve_string ${t:200} CACHED 1 ]
    set v:t:238 [ turbine::string2float_impl ${v:t:200:1} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:237 [ expr { ${v:perc_mapped:1} > ${v:t:238} } ]
    if { ${v:t:237} } {
        # Var: string t:252 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():112:205
        # Var: $string v:t:245 VALUE_OF [string:__t:245]
        # Var: $string v:t:259 VALUE_OF [string:__t:259]
        # Var: $string v:t:244 VALUE_OF [string:__t:244]
        # Var: $string v:t:243 VALUE_OF [string:__t:243]
        # Var: $string v:t:242 VALUE_OF [string:__t:242]
        # Var: $void v:t:241 VALUE_OF [void:__t:241]
        # Var: $string v:t:258 VALUE_OF [string:__t:258]
        # Var: $string v:t:257 VALUE_OF [string:__t:257]
        lassign [ adlb::multicreate [ list string 1 1 112 ] ] t:252
        turbine::c::log "allocated t:252=<${t:252}>"
        set v:t:245 "${v:t:231} passed second filter map_cutoff with value"
        set v:t:259 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:252} -100 "HARD" "RANK"
        set v:t:244 "${v:t:245}${v:perc_mapped:1}"
        set v:t:243 "${v:t:244}, minimum cutoff is "
        set v:t:242 "${v:t:243}${v:t:200:1}"
        turbine::trace_impl ${v:t:242}
        set v:t:258 "${v:t:259}${v:perc_dup}"
        set v:t:257 "${v:t:258}<? duplication_cutoff="
        turbine::rule [ list ${t:195} ] [ list __entry-async_op-strcat-4 ${t:195} ${t:252} ${v:perc_mapped:1} ${v:t:200:1} ${v:t:257} ]
        turbine::read_refcount_decr ${t:252} 1
    } else {
        # Var: string t:279 EXPR_TEMPORARY VCcallingPipeline.swift:__entry():115:209
        # Var: $string v:t:272 VALUE_OF [string:__t:272]
        # Var: $string v:t:286 VALUE_OF [string:__t:286]
        # Var: $string v:t:271 VALUE_OF [string:__t:271]
        # Var: $string v:t:270 VALUE_OF [string:__t:270]
        # Var: $string v:t:269 VALUE_OF [string:__t:269]
        # Var: $void v:t:268 VALUE_OF [void:__t:268]
        # Var: $string v:t:285 VALUE_OF [string:__t:285]
        # Var: $string v:t:284 VALUE_OF [string:__t:284]
        lassign [ adlb::multicreate [ list string 1 1 113 ] ] t:279
        turbine::c::log "allocated t:279=<${t:279}>"
        set v:t:272 "${v:t:231} DID NOT pass second filter map_cutoff with value"
        set v:t:286 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:279} -100 "HARD" "RANK"
        set v:t:271 "${v:t:272}${v:perc_mapped:1}"
        set v:t:270 "${v:t:271}, minimum cutoff is "
        set v:t:269 "${v:t:270}${v:t:200:1}"
        turbine::trace_impl ${v:t:269}
        set v:t:285 "${v:t:286}${v:perc_dup}"
        set v:t:284 "${v:t:285}<? duplication_cutoff="
        turbine::rule [ list ${t:195} ] [ list __entry-async_op-strcat-5 ${t:195} ${t:279} ${v:perc_mapped:1} ${v:t:200:1} ${v:t:284} ]
        turbine::read_refcount_decr ${t:279} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${t:195} 1
}


proc __entry-async_op-strcat-4 { t:195 t:252 v:perc_mapped:1 v:t:200:1 v:t:257 } {
    # Var: $string v:t:195:3 VALUE_OF [string:__t:195]
    # Var: $string v:t:256 VALUE_OF [string:__t:256]
    # Var: $string v:t:255 VALUE_OF [string:__t:255]
    # Var: $string v:t:254 VALUE_OF [string:__t:254]
    # Var: $string v:t:253 VALUE_OF [string:__t:253]
    # Var: $string v:t:252 VALUE_OF [string:__t:252]
    set v:t:195:3 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:t:256 "${v:t:257}${v:t:195:3}"
    set v:t:255 "${v:t:256}\n\trule2 ok: percent_mapped="
    set v:t:254 "${v:t:255}${v:perc_mapped:1}"
    set v:t:253 "${v:t:254}>? mapping_cutoff="
    set v:t:252 "${v:t:253}${v:t:200:1}"
    turbine::store_string ${t:252} ${v:t:252}
}


proc __entry-async_op-strcat-5 { t:195 t:279 v:perc_mapped:1 v:t:200:1 v:t:284 } {
    # Var: $string v:t:195:4 VALUE_OF [string:__t:195]
    # Var: $string v:t:283 VALUE_OF [string:__t:283]
    # Var: $string v:t:282 VALUE_OF [string:__t:282]
    # Var: $string v:t:281 VALUE_OF [string:__t:281]
    # Var: $string v:t:280 VALUE_OF [string:__t:280]
    # Var: $string v:t:279 VALUE_OF [string:__t:279]
    set v:t:195:4 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:t:283 "${v:t:284}${v:t:195:4}"
    set v:t:282 "${v:t:283}\n\trule2 not ok: percent_mapped="
    set v:t:281 "${v:t:282}${v:perc_mapped:1}"
    set v:t:280 "${v:t:281}>? mapping_cutoff="
    set v:t:279 "${v:t:280}${v:t:200:1}"
    turbine::store_string ${t:279} ${v:t:279}
}


proc __entry-async_op-strcat-6 { t:195 v:t:228 } {
    # Var: $string v:t:195:2 VALUE_OF [string:__t:195]
    # Var: $string v:t:227 VALUE_OF [string:__t:227]
    # Var: $void v:t:226 VALUE_OF [void:__t:226]
    set v:t:195:2 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:t:227 "${v:t:228}${v:t:195:2}"
    turbine::trace_impl ${v:t:227}
}


proc __entry-optmerged-3 { t:195 t:200 t:306 v:t:297 v:t:311 u:perc_mapped } {
    # Var: $string v:t:195:5 VALUE_OF [string:__t:195]
    # Var: $string v:t:296 VALUE_OF [string:__t:296]
    # Var: $void v:t:295 VALUE_OF [void:__t:295]
    # Var: $string v:t:310 VALUE_OF [string:__t:310]
    # Var: $string v:t:309 VALUE_OF [string:__t:309]
    # Var: $float v:perc_mapped:6 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:308 VALUE_OF [string:__t:308]
    # Var: $string v:t:307 VALUE_OF [string:__t:307]
    # Var: $string v:t:200:6 VALUE_OF [string:__t:200]
    # Var: $string v:t:306 VALUE_OF [string:__t:306]
    set v:t:195:5 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:t:296 "${v:t:297}${v:t:195:5}"
    turbine::trace_impl ${v:t:296}
    set v:t:310 "${v:t:311}${v:t:195:5}"
    set v:t:309 "${v:t:310}\n\trule2 not evaluated: percent_mapped="
    set v:perc_mapped:6 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:308 "${v:t:309}${v:perc_mapped:6}"
    set v:t:307 "${v:t:308}>? mapping_cutoff="
    set v:t:200:6 [ turbine::retrieve_string ${t:200} CACHED 1 ]
    set v:t:306 "${v:t:307}${v:t:200:6}"
    turbine::store_string ${t:306} ${v:t:306}
}


proc __entry-async_op-parse_float-3 { a:tot_mapped t:218 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:219 VALUE_OF [float:__t:219]
    # Var: $float v:t:218 VALUE_OF [float:__t:218]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:219 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:218 [ expr { ${v:t:219} * 100.0 } ]
    turbine::store_float ${t:218} ${v:t:218}
}


proc __entry-optmerged-4 { u:VarcallDir t:18 t:203 t:29 t:324 t:541 t:563 v:alias:sampleName u:dedupsortedbam u:flagstats u:outbam u:rawvariant u:stat } {
    # Var: $string v:t:18:1 VALUE_OF [string:__t:18]
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    # Var: $string v:t:324 VALUE_OF [string:__t:324]
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    # Var: $string v:t:563 VALUE_OF [string:__t:563]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:t:547 VALUE_OF [string:__t:547]
    # Var: $string v:t:541 VALUE_OF [string:__t:541]
    set v:t:18:1 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:29 "${v:t:18:1}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:29} ${v:t:29}
    set v:t:324 "${v:t:18:1}/${v:alias:sampleName}"
    turbine::store_string ${t:324} ${v:t:324}
    set v:t:34 "${v:t:29}.flagstats"
    turbine::set_filename_val ${u:flagstats} ${v:t:34}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:29}
    set v:t:563 "${v:t:324}/realign/"
    turbine::store_string ${t:563} ${v:t:563}
    set v:VarcallDir "${v:t:324}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:t:547 "${v:t:324}/variant/${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:rawvariant} ${v:t:547}
    set v:t:541 "${v:t:324}/realign/${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:541} ${v:t:541}
    turbine::set_filename_val ${u:outbam} ${v:t:541}
    turbine::rule [ list ${t:203} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list samtools_flagstat-app-leaf1 ${t:203} ${v:t:29} ${v:t:34} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:VarcallDir} ]
    turbine::reset_priority
}


proc samtools_flagstat-app-leaf1 { t:203 v:t:29 v:t:34 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:inputFile:7 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():47:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:203} CACHED 1 ]
    set v:inputFile:7 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:t:34} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:1 "flagstat" ${v:t:29} [ dict create "stdout" ${v:t:34} ] ]
    turbine::exec_external ${v:samtoolsdir:1} [ dict create "stdout" ${v:t:34} ] "flagstat" ${v:t:29}
    turbine::store_file ${u:flagstats} v:output:2 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:2
}


proc mkdir-app-leaf1 { v:VarcallDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc __entry-optmerged-5 { t:24 t:25 t:541 t:576 t:583 v:alias:sampleName u:alignedsam u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:outbam } {
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    # Var: $string v:t:24 VALUE_OF [string:__t:24]
    # Var: $string v:t:554 VALUE_OF [string:__t:554]
    # Var: $string v:t:558 VALUE_OF [string:__t:558]
    # Var: $string v:t:553 VALUE_OF [string:__t:553]
    set v:t:25 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:t:24 "${v:t:25}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:24} ${v:t:24}
    set v:t:554 "${v:t:25}/${v:alias:sampleName}"
    turbine::set_filename_val ${u:alignedsam} ${v:t:24}
    set v:t:558 "${v:t:554}.chr_vcfList.txt"
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:558}
    set v:t:553 "${v:t:554}.chr_bamList.txt"
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:553}
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] [ list __entry-call_foreign-read-2 ${t:541} ${t:576} ${t:583} ${v:t:25} ${u:chr_bamList} ${u:chr_bamListfile} ${u:outbam} ]
}


proc __entry-call_foreign-read-2 { t:541 t:576 t:583 v:t:25 u:chr_bamList u:chr_bamListfile u:outbam } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:571 VALUE_OF [string:__t:571]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:570 VALUE_OF [string:__t:570]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:571 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:571} ]
    set v:t:570 [ turbine::replace_all_impl ${v:t:571} "\n" "" 0 ${v:n:2} ]
    set v:chr_bamList [ turbine::split_impl ${v:t:570} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::rule [ list ${t:541} ${t:576} ${t:583} ] [ list novosort-app-leaf1 ${t:541} ${t:576} ${t:583} ${v:t:25} ${u:chr_bamList} ${u:outbam} ]
}


proc novosort-app-leaf1 { t:541 t:576 t:583 v:t:25 u:chr_bamList u:outbam } {
    # Var: $string v:novosortdir RENAMED [$string:__v:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $int v:thr:4 RENAMED [$int:__v:thr] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $string$[int] v:inputFilename:1 RENAMED [$string$[int]:__v:inputFilename] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $string v:__filename:output:3 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():31:76
    set v:novosortdir [ turbine::retrieve_string ${t:576} CACHED 1 ]
    set v:thr:4 [ turbine::retrieve_integer ${t:583} CACHED 1 ]
    set v:inputFilename:1 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:3 [ turbine::retrieve_string ${t:541} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:__filename:output:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:t:25} "--threads" ${v:thr:4} {*}${v:inputFilename:1} "-o" ${v:__filename:output:3} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:t:25} "--threads" ${v:thr:4} {*}${v:inputFilename:1} "-o" ${v:__filename:output:3}
    turbine::store_file ${u:outbam} v:output:3 0
    turbine::decr_local_file_refcount v:output:3
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-async_op-strcat-7 { t:17 t:18 t:21 } {
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:17 "${v:t:18}/${v:t:21}/docs/QC_test_results.txt"
    turbine::store_string ${t:17} ${v:t:17}
}


proc __entry-async_op-eq_string-2 { t:37 t:38 } {
    # Var: $string v:t:38 VALUE_OF [string:__t:38]
    # Var: $boolean v:t:37 VALUE_OF [boolean:__t:37]
    set v:t:38 [ turbine::retrieve_string ${t:38} CACHED 1 ]
    set v:t:37 [ string equal ${v:t:38} "SAMBLASTER" ]
    turbine::store_integer ${t:37} ${v:t:37}
}


proc __entry-async_op-parse_float-4 { t:195 t:223 } {
    # Var: $string v:t:195 VALUE_OF [string:__t:195]
    # Var: $float v:t:223 VALUE_OF [float:__t:223]
    set v:t:195 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:t:223 [ turbine::string2float_impl ${v:t:195} ]
    turbine::store_float ${t:223} ${v:t:223}
}


proc __entry-call_foreign-split-3 { t:329 u:indices } {
    # Var: $string v:t:329 VALUE_OF [string:__t:329]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:329 [ turbine::retrieve_string ${t:329} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:329} ":" ]
    turbine::build_rec ${u:indices} ${v:indices} [ list container integer string ] 0 1
}


proc __entry-async_op-strcat-8 { t:576 t:577 } {
    # Var: $string v:t:577 VALUE_OF [string:__t:577]
    # Var: $string v:t:576 VALUE_OF [string:__t:576]
    set v:t:577 [ turbine::retrieve_string ${t:577} CACHED 1 ]
    set v:t:576 "${v:t:577}/novosort"
    turbine::store_string ${t:576} ${v:t:576}
}


proc __entry-async_op-parse_int { t:583 t:584 } {
    # Var: $string v:t:584 VALUE_OF [string:__t:584]
    # Var: $int v:t:583 VALUE_OF [int:__t:583]
    set v:t:584 [ turbine::retrieve_string ${t:584} CACHED 1 ]
    set v:t:583 [ turbine::parse_int_impl ${v:t:584} 10 ]
    turbine::store_integer ${t:583} ${v:t:583}
}


proc __entry-async_op-dircat { t:448 t:450 } {
    # Var: $string v:t:450 VALUE_OF [string:__t:450]
    # Var: $string v:t:449 VALUE_OF [string:__t:449]
    # Var: $string v:t:448 VALUE_OF [string:__t:448]
    set v:t:450 [ turbine::retrieve_string ${t:450} CACHED 1 ]
    set v:t:449 "${v:t:450}/GenomeAnalysisTK.jar"
    set v:t:448 "${v:t:449}"
    turbine::store_string ${t:448} ${v:t:448}
}


proc __entry-optmerged-6 { t:410 t:412 t:414 t:453 t:456 t:488 t:491 } {
    # Var: $string v:t:412 VALUE_OF [string:__t:412]
    set v:t:412 [ turbine::retrieve_string ${t:412} CACHED 1 ]
    turbine::rule [ list ${t:414} ] [ list __entry-async_op-dircat-1 ${t:410} ${t:414} ${v:t:412} ]
    turbine::rule [ list ${t:456} ] [ list __entry-async_op-dircat-2 ${t:453} ${t:456} ${v:t:412} ]
    turbine::rule [ list ${t:491} ] [ list __entry-async_op-dircat-3 ${t:488} ${t:491} ${v:t:412} ]
}


proc __entry-async_op-dircat-1 { t:410 t:414 v:t:412 } {
    # Var: $string v:t:414 VALUE_OF [string:__t:414]
    # Var: $string v:t:411 VALUE_OF [string:__t:411]
    # Var: $string v:t:410 VALUE_OF [string:__t:410]
    set v:t:414 [ turbine::retrieve_string ${t:414} CACHED 1 ]
    set v:t:411 "${v:t:412}/${v:t:414}"
    set v:t:410 "${v:t:411}/"
    turbine::store_string ${t:410} ${v:t:410}
}


proc __entry-async_op-dircat-2 { t:453 t:456 v:t:412 } {
    # Var: $string v:t:456 VALUE_OF [string:__t:456]
    # Var: $string v:t:453 VALUE_OF [string:__t:453]
    set v:t:456 [ turbine::retrieve_string ${t:456} CACHED 1 ]
    set v:t:453 "${v:t:412}/${v:t:456}"
    turbine::store_string ${t:453} ${v:t:453}
}


proc __entry-async_op-dircat-3 { t:488 t:491 v:t:412 } {
    # Var: $string v:t:491 VALUE_OF [string:__t:491]
    # Var: $string v:t:488 VALUE_OF [string:__t:488]
    set v:t:491 [ turbine::retrieve_string ${t:491} CACHED 1 ]
    set v:t:488 "${v:t:412}/${v:t:491}"
    turbine::store_string ${t:488} ${v:t:488}
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/src/swift-t-0.9.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:bwamemparams VALUE_OF [string:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::retrieve_string ${u:bwamemparams} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:u v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:u} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ${u:u} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}} {${u:u}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:output u:samtoolsdir u:thr u:u } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:u VALUE_OF [string:u] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():14:55
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:u [ turbine::retrieve_string ${u:u} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} ${v:u}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:novosort { u:output u:novosortdir u:inputFilename u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::read_refcount_incr ${u:inputFilename} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:inputFilename} ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1-1 {${filename:output}} ${v:mapped_output} {${u:inputFilename}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1-1 { filename:output v:mapped_output u:inputFilename u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $string v:inputFilename VALUE_OF [string:inputFilename] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():27:76
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():27:76
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:inputFilename [ turbine::retrieve_string ${u:inputFilename} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:inputFilename} "-o" ${v:__filename:output} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:inputFilename} "-o" ${v:__filename:output}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_-5" ""
adlb::add_debug_symbol 2 "__c:s_compressio" ""
adlb::add_debug_symbol 3 "__c:s_markDuplic" ""
adlb::add_debug_symbol 4 "__c:s_sknownSite" ""
adlb::add_debug_symbol 5 "__c:s_sknown_g" ""
adlb::add_debug_symbol 6 "__c:s_svariant_g" ""
adlb::add_debug_symbol 7 "__c:s_u" ""
adlb::add_debug_symbol 8 "__t:7" "VCcallingPipeline:27:33"
adlb::add_debug_symbol 9 "configFile" "VCcallingPipeline:22:0"
adlb::add_debug_symbol 10 "sampleInfoFile" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 11 "vars" "VCcallingPipeline:25:0"
adlb::add_debug_symbol 12 "__t:11" "VCcallingPipeline:__entry():38:88"
adlb::add_debug_symbol 13 "__t:13" "VCcallingPipeline:__entry():38:106"
adlb::add_debug_symbol 14 "__t:15" "VCcallingPipeline:__entry():38:148"
adlb::add_debug_symbol 15 "__t:18" "VCcallingPipeline:__entry():44:21"
adlb::add_debug_symbol 16 "__t:21" "VCcallingPipeline:__entry():44:45"
adlb::add_debug_symbol 17 "__t:25" "VCcallingPipeline:__entry():46:25"
adlb::add_debug_symbol 18 "__t:38" "VCcallingPipeline:__entry():53:5"
adlb::add_debug_symbol 19 "__t:195" "VCcallingPipeline:__entry():95:54"
adlb::add_debug_symbol 20 "__t:200" "VCcallingPipeline:__entry():96:55"
adlb::add_debug_symbol 21 "__t:203" "VCcallingPipeline:__entry():98:31"
adlb::add_debug_symbol 22 "__t:329" "VCcallingPipeline:__entry():133:17"
adlb::add_debug_symbol 23 "__t:577" "VCcallingPipeline:__entry():191:27"
adlb::add_debug_symbol 24 "__t:584" "VCcallingPipeline:__entry():191:105"
adlb::add_debug_symbol 25 "__t:412" "VCcallingPipeline:__entry():159:34"
adlb::add_debug_symbol 26 "__t:414" "VCcallingPipeline:__entry():159:55"
adlb::add_debug_symbol 27 "__t:446" "VCcallingPipeline:__entry():168:38"
adlb::add_debug_symbol 28 "__t:450" "VCcallingPipeline:__entry():168:62"
adlb::add_debug_symbol 29 "__t:456" "VCcallingPipeline:__entry():168:124"
adlb::add_debug_symbol 30 "__t:491" "VCcallingPipeline:__entry():171:222"
adlb::add_debug_symbol 31 "__t:17" "VCcallingPipeline:__entry():44:14"
adlb::add_debug_symbol 32 "__t:37" "VCcallingPipeline:__entry():53:32"
adlb::add_debug_symbol 33 "__t:223" "VCcallingPipeline:__entry():108:17"
adlb::add_debug_symbol 34 "indices" "VCcallingPipeline:__entry():133:9"
adlb::add_debug_symbol 35 "__t:576" "VCcallingPipeline:__entry():191:20"
adlb::add_debug_symbol 36 "__t:583" "VCcallingPipeline:__entry():191:94"
adlb::add_debug_symbol 37 "__t:453" "VCcallingPipeline:__entry():168:123"
adlb::add_debug_symbol 38 "__t:488" "VCcallingPipeline:__entry():171:221"
adlb::add_debug_symbol 39 "__t:410" "VCcallingPipeline:__entry():159:27"
adlb::add_debug_symbol 40 "__t:448" "VCcallingPipeline:__entry():168:55"
adlb::add_debug_symbol 41 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 42 "sampleInfo" "VCcallingPipeline:__entry():33:1"
adlb::add_debug_symbol 43 "read1" "VCcallingPipeline:__entry():35:1"
adlb::add_debug_symbol 44 "read2" "VCcallingPipeline:__entry():36:1"
adlb::add_debug_symbol 45 "rgheader" "VCcallingPipeline:__entry():38:1"
adlb::add_debug_symbol 46 "qcfile" "VCcallingPipeline:__entry():44:69"
adlb::add_debug_symbol 47 "__t:24" "VCcallingPipeline:__entry():46:18"
adlb::add_debug_symbol 48 "alignedsam" "VCcallingPipeline:__entry():46:63"
adlb::add_debug_symbol 49 "__t:29" "VCcallingPipeline:__entry():48:22"
adlb::add_debug_symbol 50 "dedupsortedbam" "VCcallingPipeline:__entry():48:71"
adlb::add_debug_symbol 51 "flagstats" "VCcallingPipeline:__entry():51:50"
adlb::add_debug_symbol 52 "stat" "VCcallingPipeline:__entry():100:1"
adlb::add_debug_symbol 53 "__t:205" "VCcallingPipeline:__entry():101:14"
adlb::add_debug_symbol 54 "__t:208" "VCcallingPipeline:__entry():102:13"
adlb::add_debug_symbol 55 "__t:211" "VCcallingPipeline:__entry():103:12"
adlb::add_debug_symbol 56 "perc_mapped" "VCcallingPipeline:__entry():106:12"
adlb::add_debug_symbol 57 "__t:218" "VCcallingPipeline:__entry():106:38"
adlb::add_debug_symbol 58 "VarcallDir" "VCcallingPipeline:__entry():130:1"
adlb::add_debug_symbol 59 "__t:324" "VCcallingPipeline:__entry():130:45"
adlb::add_debug_symbol 60 "__t:541" "VCcallingPipeline:__entry():182:15"
adlb::add_debug_symbol 61 "outbam" "VCcallingPipeline:__entry():182:77"
adlb::add_debug_symbol 62 "rawvariant" "VCcallingPipeline:__entry():183:81"
adlb::add_debug_symbol 63 "chr_bamListfile" "VCcallingPipeline:__entry():186:57"
adlb::add_debug_symbol 64 "chr_vcfListfile" "VCcallingPipeline:__entry():187:57"
adlb::add_debug_symbol 65 "__t:563" "VCcallingPipeline:__entry():189:31"
adlb::add_debug_symbol 66 "__t:568" "VCcallingPipeline:__entry():189:82"
adlb::add_debug_symbol 67 "chr_bamList" "VCcallingPipeline:__entry():190:1"
adlb::add_debug_symbol 68 "__t:597" "VCcallingPipeline:__entry():196:82"
adlb::add_debug_symbol 69 "__t:601" "VCcallingPipeline:__entry():197:47"
adlb::add_debug_symbol 70 "dedupsam" "VCcallingPipeline:__entry():56:63"
adlb::add_debug_symbol 71 "__t:48" "VCcallingPipeline:__entry():57:17"
adlb::add_debug_symbol 72 "dedupbam" "VCcallingPipeline:__entry():57:66"
adlb::add_debug_symbol 73 "__t:53" "VCcallingPipeline:__entry():58:23"
adlb::add_debug_symbol 74 "__t:55" "VCcallingPipeline:__entry():58:53"
adlb::add_debug_symbol 75 "__t:57" "VCcallingPipeline:__entry():58:71"
adlb::add_debug_symbol 76 "__t:62" "VCcallingPipeline:__entry():59:24"
adlb::add_debug_symbol 77 "__t:82" "VCcallingPipeline:__entry():66:19"
adlb::add_debug_symbol 78 "alignedbam" "VCcallingPipeline:__entry():66:67"
adlb::add_debug_symbol 79 "alignedsortedbam" "VCcallingPipeline:__entry():69:75"
adlb::add_debug_symbol 80 "metricsfile" "VCcallingPipeline:__entry():70:70"
adlb::add_debug_symbol 81 "__t:103" "VCcallingPipeline:__entry():71:24"
adlb::add_debug_symbol 82 "__t:105" "VCcallingPipeline:__entry():71:54"
adlb::add_debug_symbol 83 "__t:107" "VCcallingPipeline:__entry():71:72"
adlb::add_debug_symbol 84 "__t:132" "VCcallingPipeline:__entry():75:56"
adlb::add_debug_symbol 85 "__t:139" "VCcallingPipeline:__entry():80:7"
adlb::add_debug_symbol 86 "__t:142" "VCcallingPipeline:__entry():81:25"
adlb::add_debug_symbol 87 "__t:144" "VCcallingPipeline:__entry():81:55"
adlb::add_debug_symbol 88 "__t:146" "VCcallingPipeline:__entry():81:73"
adlb::add_debug_symbol 89 "__t:162" "VCcallingPipeline:__entry():84:87"
adlb::add_debug_symbol 90 "__t:164" "VCcallingPipeline:__entry():84:111"
adlb::add_debug_symbol 91 "__t:340" "VCcallingPipeline:__entry():142:26"
adlb::add_debug_symbol 92 "chrdedupsortedbam" "VCcallingPipeline:__entry():142:97"
adlb::add_debug_symbol 93 "__t:347" "VCcallingPipeline:__entry():143:21"
adlb::add_debug_symbol 94 "realignedbam" "VCcallingPipeline:__entry():143:93"
adlb::add_debug_symbol 95 "__t:354" "VCcallingPipeline:__entry():144:24"
adlb::add_debug_symbol 96 "recalibratedbam" "VCcallingPipeline:__entry():144:96"
adlb::add_debug_symbol 97 "__t:361" "VCcallingPipeline:__entry():145:20"
adlb::add_debug_symbol 98 "gvcfvariant" "VCcallingPipeline:__entry():145:92"
adlb::add_debug_symbol 99 "recalfiles" "VCcallingPipeline:__entry():147:69"
adlb::add_debug_symbol 100 "realfiles" "VCcallingPipeline:__entry():148:68"
adlb::add_debug_symbol 101 "__t:380" "VCcallingPipeline:__entry():149:19"
adlb::add_debug_symbol 102 "intervals" "VCcallingPipeline:__entry():149:91"
adlb::add_debug_symbol 103 "__t:387" "VCcallingPipeline:__entry():150:21"
adlb::add_debug_symbol 104 "recalreport" "VCcallingPipeline:__entry():150:93"
adlb::add_debug_symbol 105 "ploidy" "VCcallingPipeline:__entry():153:2"
adlb::add_debug_symbol 106 "__t:407" "VCcallingPipeline:__entry():155:103"
adlb::add_debug_symbol 107 "__t:417" "VCcallingPipeline:__entry():159:79"
adlb::add_debug_symbol 108 "recalparmsindels" "VCcallingPipeline:__entry():160:2"
adlb::add_debug_symbol 109 "__t:422" "VCcallingPipeline:__entry():160:53"
adlb::add_debug_symbol 110 "realparms" "VCcallingPipeline:__entry():163:2"
adlb::add_debug_symbol 111 "__t:440" "VCcallingPipeline:__entry():163:46"
adlb::add_debug_symbol 112 "__t:252" "VCcallingPipeline:__entry():112:205"
adlb::add_debug_symbol 113 "__t:279" "VCcallingPipeline:__entry():115:209"
adlb::add_debug_symbol 114 "__t:306" "VCcallingPipeline:__entry():119:218"
turbine::start swift:main swift:constants
turbine::finalize
