
# Generated by stc version 0.6.0
# date                    : 2016/08/15 09:25:39
# Turbine version         : 0.6.0
# Input filename          : /home/azza/swift-project/Swift-Variant-Calling/align.swift
# Output filename         : /home/azza/swift-project/Swift-Variant-Calling/./swift-t-align.wJG.tic
# STC home                : /usr/local/src/swift-t-0.9.0/stc
# Turbine home            : /usr/local/src/swift-t-0.9.0/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : align.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-align.wJG.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /usr/local/src/swift-t-0.9.0/stc
# stc.turbine.version           : 0.6.0
# stc.turbine_home              : /usr/local/src/swift-t-0.9.0/turbine
# stc.version                   : 0.6.0

# Metadata:

package require turbine 0.6.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY align.swift:86:33
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:configFile align.swift:81:0
    # Var: file u:sampleInfoFile align.swift:86:0
    # Var: string[string] u:vars align.swift:84:0
    # Var: string t:11 EXPR_TEMPORARY align.swift:__entry():97:90
    # Var: string t:13 EXPR_TEMPORARY align.swift:__entry():97:108
    # Var: string t:15 EXPR_TEMPORARY align.swift:__entry():97:150
    # Var: string t:18 EXPR_TEMPORARY align.swift:__entry():99:25
    # Var: string t:23 EXPR_TEMPORARY align.swift:__entry():100:25
    # Var: string t:54 EXPR_TEMPORARY align.swift:__entry():130:20
    # Var: string t:56 EXPR_TEMPORARY align.swift:__entry():130:50
    # Var: string t:58 EXPR_TEMPORARY align.swift:__entry():130:68
    # Var: string t:61 EXPR_TEMPORARY align.swift:__entry():130:101
    # Var: string t:63 EXPR_TEMPORARY align.swift:__entry():131:30
    # Var: string t:71 EXPR_TEMPORARY align.swift:__entry():132:38
    # Var: string t:82 EXPR_TEMPORARY align.swift:__entry():133:10
    # Var: string t:84 EXPR_TEMPORARY align.swift:__entry():133:27
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: int t:60 EXPR_TEMPORARY align.swift:__entry():130:90
    # Var: string t:70 EXPR_TEMPORARY align.swift:__entry():132:31
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list container string string 14 1 4 ] [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 1 1 7 ] [ list string 1 1 8 ] [ list string 1 1 9 ] [ list string 1 1 10 ] [ list string 1 1 11 ] [ list string 1 1 12 ] [ list string 1 1 13 ] [ list string 1 1 14 ] [ list string 1 1 15 ] [ list string 1 1 16 ] [ list string 1 1 17 ] [ list integer 1 1 18 ] [ list string 1 1 19 ] ] t:7 u:vars t:11 t:13 t:15 t:18 t:23 t:54 t:56 t:58 t:61 t:63 t:71 t:82 t:84 t:60 t:70
    turbine::c::log "allocated t:7=<${t:7}> u:vars=<${u:vars}> t:11=<${t:11}> t:13=<${t:13}> t:15=<${t:15}>"
    turbine::c::log "allocated t:18=<${t:18}> t:23=<${t:23}> t:54=<${t:54}> t:56=<${t:56}> t:58=<${t:58}>"
    turbine::c::log "allocated t:61=<${t:61}> t:63=<${t:63}> t:71=<${t:71}> t:82=<${t:82}> t:84=<${t:84}>"
    turbine::c::log "allocated t:60=<${t:60}> t:70=<${t:70}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 2 ] [ list file 1 1 3 ] ] [ list 0 0 ] ] u:configFile u:sampleInfoFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:11} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:13} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:15} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:18} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:23} string
    turbine::container_reference ${u:vars} "BWADIR" ${t:54} string
    turbine::container_reference ${u:vars} "BWAINDEX" ${t:56} string
    turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:58} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:61} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:63} string
    turbine::container_reference ${u:vars} "NOVOCRAFTDIR" ${t:71} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:82} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:84} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] align.swift:getConfigVariables():68:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 20 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:11} ${t:13} ${t:15} ${t:18} ${t:23} ${t:54} ${t:56} ${t:58} ${t:60} ${t:63} ${t:7} ${t:70} ${t:82} ${t:84} {${u:sampleInfoFile}}"
    turbine::rule [ list ${t:61} ] "__entry-async_op-parse_int ${t:60} ${t:61}"
    turbine::rule [ list ${t:71} ] "__entry-async_op-strcat ${t:70} ${t:71}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:11 t:13 t:15 t:18 t:23 t:54 t:56 t:58 t:60 t:63 t:7 t:70 t:82 t:84 u:sampleInfoFile } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:11} ${t:13} ${t:15} ${t:18} ${t:23} ${t:54} ${t:56} ${t:58} ${t:60} ${t:63} ${t:70} ${t:82} ${t:84} {${v:sampleLines}}"
    turbine::decr_local_file_refcount v:sampleInfoFile
}


proc __entry-foreach-wait1 { t:11 t:13 t:15 t:18 t:23 t:54 t:56 t:58 t:60 t:63 t:70 t:82 t:84 v:sampleLines } {
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:18} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:58} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:54} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:11} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:56} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:23} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:82} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:60} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:84} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:63} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:70} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo align.swift:__entry():90:1
        # Var: file u:alignedsam align.swift:__entry():99:63
        # Var: string t:22 EXPR_TEMPORARY align.swift:__entry():100:18
        # Var: file u:alignedbam align.swift:__entry():100:66
        # Var: file u:dedupsam align.swift:__entry():101:62
        # Var: file u:dedupbam align.swift:__entry():102:65
        # Var: string t:37 EXPR_TEMPORARY align.swift:__entry():103:22
        # Var: file u:dedupsortedbam align.swift:__entry():103:71
        # Var: file u:alignedsortedbam align.swift:__entry():104:73
        # Var: string t:47 EXPR_TEMPORARY align.swift:__entry():105:19
        # Var: file u:metricsfile align.swift:__entry():105:68
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 21 ] [ list string 1 1 23 ] [ list string 1 1 27 ] [ list string 1 1 30 ] ] u:sampleInfo t:22 t:37 t:47
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> t:22=<${t:22}> t:37=<${t:37}> t:47=<${t:47}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 22 ] [ list file 0 1 24 ] [ list file 0 1 25 ] [ list file 0 1 26 ] [ list file 1 1 28 ] [ list file 0 1 29 ] [ list file 1 1 31 ] ] [ list 1 1 1 1 1 1 1 ] ] u:alignedsam u:alignedbam u:dedupsam u:dedupbam u:dedupsortedbam u:alignedsortedbam u:metricsfile
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        f:touch ${u:dedupsortedbam} ${t:37} -100 "HARD" "RANK"
        f:touch ${u:metricsfile} ${t:47} -100 "HARD" "RANK"
        turbine::rule [ list ${t:23} ] [ list __entry-optmerged ${t:18} ${t:22} ${t:23} ${t:37} ${t:47} ${t:60} ${t:70} ${t:82} ${t:84} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsortedbam} ${u:dedupbam} ${u:dedupsortedbam} ${u:metricsfile} ]
        turbine::rule [ list ${t:18} ] [ list __entry-optmerged-2 ${t:11} ${t:13} ${t:15} ${t:18} ${t:22} ${t:54} ${t:56} ${t:58} ${t:60} ${t:63} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsam} ]
        turbine::read_refcount_decr ${t:47} 1
        turbine::read_refcount_decr ${t:37} 1
        turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
        turbine::file_read_refcount_decr ${u:metricsfile} 1
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:18} 1
    turbine::read_refcount_decr ${t:58} 1
    turbine::read_refcount_decr ${t:15} 1
    turbine::read_refcount_decr ${t:54} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${t:23} 1
    turbine::read_refcount_decr ${t:56} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:84} 1
    turbine::read_refcount_decr ${t:63} 1
    turbine::read_refcount_decr ${t:70} 1
    turbine::read_refcount_decr ${t:60} 1
    turbine::read_refcount_decr ${t:82} 1
}


proc __entry-optmerged { t:18 t:22 t:23 t:37 t:47 t:60 t:70 t:82 t:84 v:alias:sampleName u:alignedbam u:alignedsortedbam u:dedupbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:22 VALUE_OF [string:__t:22]
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    # Var: $string v:t:37 VALUE_OF [string:__t:37]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    # Var: $string v:t:47 VALUE_OF [string:__t:47]
    # Var: $string v:t:91 VALUE_OF [string:__t:91]
    # Var: $string v:t:88 VALUE_OF [string:__t:88]
    # Var: $string v:t:94 VALUE_OF [string:__t:94]
    set v:t:23 [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:t:22 "${v:t:23}/align/${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:22} ${v:t:22}
    set v:t:32 "${v:t:23}/align/${v:alias:sampleName}.wdups.bam"
    set v:t:37 "${v:t:23}/align/${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:37} ${v:t:37}
    set v:t:42 "${v:t:23}/align/${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:47 "${v:t:23}/align/${v:alias:sampleName}.picard.metrics"
    turbine::store_string ${t:47} ${v:t:47}
    turbine::set_filename_val ${u:alignedbam} ${v:t:22}
    turbine::set_filename_val ${u:dedupbam} ${v:t:32}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:37}
    set v:t:91 "OUTPUT=${v:t:37}"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:42}
    set v:t:88 "INPUT=${v:t:42}"
    set v:t:94 "METRICS_FILE=${v:t:47}"
    turbine::set_filename_val ${u:metricsfile} ${v:t:47}
    turbine::rule [ list ${t:18} ] [ list __entry-optmerged-1 ${t:18} ${t:60} ${t:70} ${t:82} ${t:84} ${v:t:22} ${v:t:42} ${v:t:88} ${v:t:91} ${v:t:94} ${u:alignedsortedbam} ]
}


proc __entry-optmerged-1 { t:18 t:60 t:70 t:82 t:84 v:t:22 v:t:42 v:t:88 v:t:91 v:t:94 u:alignedsortedbam } {
    turbine::rule [ list ${t:60} ${t:70} ] [ list novosort-app-leaf1 ${t:18} ${t:60} ${t:70} ${v:t:22} ${v:t:42} ${u:alignedsortedbam} ]
    turbine::rule [ list ${t:82} ${t:84} ] [ list picard-app-leaf1 ${t:82} ${t:84} ${v:t:88} ${v:t:91} ${v:t:94} ]
}


proc novosort-app-leaf1 { t:18 t:60 t:70 v:t:22 v:t:42 u:alignedsortedbam } {
    # Var: $string v:novosortdir RENAMED [$string:__v:novosortdir] align.swift:novosort():44:88
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] align.swift:novosort():44:88
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] align.swift:novosort():44:88
    # Var: $file v:output:2 RENAMED [$file:__v:output] align.swift:novosort():44:88
    set v:novosortdir [ turbine::retrieve_string ${t:70} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${t:60} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:t:42} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr:1} " " ${v:t:22} "-o" ${v:t:42} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr:1} " " ${v:t:22} "-o" ${v:t:42}
    turbine::store_file ${u:alignedsortedbam} v:output:2 0
    turbine::decr_local_file_refcount v:output:2
}


proc picard-app-leaf1 { t:82 t:84 v:t:88 v:t:91 v:t:94 } {
    # Var: $string v:java RENAMED [$string:__v:java] align.swift:picard():49:69
    # Var: $string v:picard RENAMED [$string:__v:picard] align.swift:picard():49:69
    set v:java [ turbine::retrieve_string ${t:82} CACHED 1 ]
    set v:picard [ turbine::retrieve_string ${t:84} CACHED 1 ]
    turbine::c::log [ list exec: __v:java "-jar" ${v:picard} "MarkDuplicates" ${v:t:88} ${v:t:91} ${v:t:94} [ dict create ] ]
    turbine::exec_external ${v:java} [ dict create ] "-jar" ${v:picard} "MarkDuplicates" ${v:t:88} ${v:t:91} ${v:t:94}
}


proc __entry-optmerged-2 { t:11 t:13 t:15 t:18 t:22 t:54 t:56 t:58 t:60 t:63 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsam } {
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 "${v:t:18}/align/${v:alias:sampleName}.nodups.sam"
    set v:t:27 "${v:t:18}/align/${v:alias:sampleName}.wdups.sam"
    turbine::set_filename_val ${u:alignedsam} ${v:t:17}
    turbine::set_filename_val ${u:dedupsam} ${v:t:27}
    turbine::rule [ list ${t:60} ] [ list __entry-optmerged-3 ${t:11} ${t:13} ${t:15} ${t:22} ${t:54} ${t:56} ${t:58} ${t:60} ${t:63} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${v:t:17} ${u:alignedbam} ${u:alignedsam} ]
}


proc __entry-optmerged-3 { t:11 t:13 t:15 t:22 t:54 t:56 t:58 t:60 t:63 v:alias:read1 v:alias:read2 v:alias:sampleName v:t:17 u:alignedbam u:alignedsam } {
    turbine::rule [ list ${t:22} ${t:63} ] [ list samtools_view-app-leaf1 ${t:22} ${t:60} ${t:63} ${v:t:17} ${u:alignedbam} ]
    turbine::rule [ list ${t:11} ${t:13} ${t:15} ${t:54} ${t:56} ${t:58} ] [ list __entry-async_op-sprintf ${t:11} ${t:13} ${t:15} ${t:54} ${t:56} ${t:58} ${t:60} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${v:t:17} ${u:alignedsam} ]
}


proc samtools_view-app-leaf1 { t:22 t:60 t:63 v:t:17 u:alignedbam } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] align.swift:samtools_view():29:59
    # Var: $int v:thr RENAMED [$int:__v:thr] align.swift:samtools_view():29:59
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] align.swift:samtools_view():29:59
    # Var: $file v:output:1 RENAMED [$file:__v:output] align.swift:samtools_view():29:59
    set v:samtoolsdir [ turbine::retrieve_string ${t:63} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${t:60} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:22} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" "-u" ${v:t:17} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output:1} ] "view" "-@" ${v:thr} "-bS" "-u" ${v:t:17}
    turbine::store_file ${u:alignedbam} v:output:1 0
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-async_op-sprintf { t:11 t:13 t:15 t:54 t:56 t:58 t:60 v:alias:read1 v:alias:read2 v:alias:sampleName v:t:17 u:alignedsam } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    # Var: $string v:bwadir RENAMED [$string:__v:bwadir] align.swift:bwa():14:86
    # Var: $string v:bwamemparams RENAMED [$string:__v:bwamemparams] align.swift:bwa():14:86
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] align.swift:bwa():14:86
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] align.swift:bwa():14:86
    # Var: $file v:output RENAMED [$file:__v:output] align.swift:bwa():14:86
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s\t" ${v:alias:sampleName} ${v:t:11} ${v:t:13} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:15} ] ]
    set v:bwadir [ turbine::retrieve_string ${t:54} CACHED 1 ]
    set v:bwamemparams [ turbine::retrieve_string ${t:58} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${t:60} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:56} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:17} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader:1} ${v:INDEX} ${v:alias:read1} ${v:alias:read2} [ dict create "stdout" ${v:t:17} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:t:17} ] "mem" "-M" ${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader:1} ${v:INDEX} ${v:alias:read1} ${v:alias:read2}
    turbine::store_file ${u:alignedsam} v:output 0
    turbine::decr_local_file_refcount v:output
}


proc __entry-async_op-parse_int { t:60 t:61 } {
    # Var: $string v:t:61 VALUE_OF [string:__t:61]
    # Var: $int v:t:60 VALUE_OF [int:__t:60]
    set v:t:61 [ turbine::retrieve_string ${t:61} CACHED 1 ]
    set v:t:60 [ turbine::parse_int_impl ${v:t:61} 10 ]
    turbine::store_integer ${t:60} ${v:t:60}
}


proc __entry-async_op-strcat { t:70 t:71 } {
    # Var: $string v:t:71 VALUE_OF [string:__t:71]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    set v:t:71 [ turbine::retrieve_string ${t:71} CACHED 1 ]
    set v:t:70 "${v:t:71}/novosort"
    turbine::store_string ${t:70} ${v:t:70}
}


proc f:touch { u:output u:input v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: touch"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:input} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:input} ] "touch-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:input}} {${u:output}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc touch-app-leaf1 { filename:output v:mapped_output u:input u:output } {
    # Var: $string v:input VALUE_OF [string:input] align.swift:touch():56:16
    # Var: $file v:output VALUE_OF [file:output] align.swift:touch():56:16
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] align.swift:touch():56:16
    # Var: $boolean v:2 EXPR_TEMPORARY align.swift:touch():56:16
    set v:input [ turbine::retrieve_string ${u:input} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "touch" ${v:input} [ dict create ] ]
    turbine::exec_external "touch" [ dict create ] ${v:input}
    set v:2 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:2}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:7" "align:86:33"
adlb::add_debug_symbol 2 "configFile" "align:81:0"
adlb::add_debug_symbol 3 "sampleInfoFile" "align:86:0"
adlb::add_debug_symbol 4 "vars" "align:84:0"
adlb::add_debug_symbol 5 "__t:11" "align:__entry():97:90"
adlb::add_debug_symbol 6 "__t:13" "align:__entry():97:108"
adlb::add_debug_symbol 7 "__t:15" "align:__entry():97:150"
adlb::add_debug_symbol 8 "__t:18" "align:__entry():99:25"
adlb::add_debug_symbol 9 "__t:23" "align:__entry():100:25"
adlb::add_debug_symbol 10 "__t:54" "align:__entry():130:20"
adlb::add_debug_symbol 11 "__t:56" "align:__entry():130:50"
adlb::add_debug_symbol 12 "__t:58" "align:__entry():130:68"
adlb::add_debug_symbol 13 "__t:61" "align:__entry():130:101"
adlb::add_debug_symbol 14 "__t:63" "align:__entry():131:30"
adlb::add_debug_symbol 15 "__t:71" "align:__entry():132:38"
adlb::add_debug_symbol 16 "__t:82" "align:__entry():133:10"
adlb::add_debug_symbol 17 "__t:84" "align:__entry():133:27"
adlb::add_debug_symbol 18 "__t:60" "align:__entry():130:90"
adlb::add_debug_symbol 19 "__t:70" "align:__entry():132:31"
adlb::add_debug_symbol 20 "keyValuePair" "align:getConfigVariables():68:2"
adlb::add_debug_symbol 21 "sampleInfo" "align:__entry():90:1"
adlb::add_debug_symbol 22 "alignedsam" "align:__entry():99:63"
adlb::add_debug_symbol 23 "__t:22" "align:__entry():100:18"
adlb::add_debug_symbol 24 "alignedbam" "align:__entry():100:66"
adlb::add_debug_symbol 25 "dedupsam" "align:__entry():101:62"
adlb::add_debug_symbol 26 "dedupbam" "align:__entry():102:65"
adlb::add_debug_symbol 27 "__t:37" "align:__entry():103:22"
adlb::add_debug_symbol 28 "dedupsortedbam" "align:__entry():103:71"
adlb::add_debug_symbol 29 "alignedsortedbam" "align:__entry():104:73"
adlb::add_debug_symbol 30 "__t:47" "align:__entry():105:19"
adlb::add_debug_symbol 31 "metricsfile" "align:__entry():105:68"
turbine::start swift:main swift:constants
turbine::finalize
